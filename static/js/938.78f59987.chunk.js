"use strict";(self.webpackChunkreact_speedcubing_timer=self.webpackChunkreact_speedcubing_timer||[]).push([[938],{938:(t,e,s)=>{s.r(e),s.d(e,{EXPERIMENTAL_PUZZLE_BASE_SHAPES:()=>ct,EXPERIMENTAL_PUZZLE_CUT_TYPES:()=>ft,ExperimentalPGNotation:()=>yt,PuzzleGeometry:()=>wt,Quat:()=>Z,getPG3DNamedPuzzles:()=>at,getPuzzleDescriptionString:()=>lt,getPuzzleGeometryByDesc:()=>mt,getPuzzleGeometryByName:()=>pt,parseOptions:()=>U,parsePuzzleDescription:()=>ut,schreierSims:()=>st});var i=s(263),n=s(546);var o=class{constructor(t,e){(0,n.Mu)(this,"prefixFree",!0),(0,n.Mu)(this,"gripnames",[]),this.facenames=t,e&&(this.gripnames=e);for(let s=0;this.prefixFree&&s<t.length;s++)for(let e=0;this.prefixFree&&e<t.length;e++)s!==e&&t[s].startsWith(t[e])&&(this.prefixFree=!1)}setGripNames(t){this.gripnames=t}splitByFaceNames(t){const e=[];let s=0;for(;s<t.length;){s>0&&s<t.length&&"_"===t[s]&&s++;let i=-1;for(let e=0;e<this.facenames.length;e++)t.substr(s).startsWith(this.facenames[e])&&(i<0||this.facenames[e].length>this.facenames[i].length)&&(i=e);if(!(i>=0))throw new Error(`Could not split ${t} into face names.`);e.push(i),s+=this.facenames[i].length}return e}joinByFaceIndices(t){let e="";const s=[];for(let i=0;i<t.length;i++)s.push(e),s.push(this.facenames[t[i]]),this.prefixFree||(e="_");return s.join("")}spinmatch(t,e){if(t===e)return!0;try{const s=this.splitByFaceNames(t),i=this.splitByFaceNames(e);if(s.length!==i.length&&s.length<3)return!1;for(let t=0;t<s.length;t++){for(let i=0;i<t;i++)if(s[t]===s[i])return!1;let e=!1;for(let n=0;n<i.length;n++)if(s[t]===i[n]){e=!0;break}if(!e)return!1}return!0}catch(s){return!1}}spinmatchv(t,e){return t.endsWith("v")&&e.endsWith("v")?this.spinmatch(t.slice(0,t.length-1),e.slice(0,e.length-1)):this.spinmatch(t,e)}unswizzle(t){(t.endsWith("v")||t.endsWith("w"))&&t[0]<="Z"&&(t=t.slice(0,t.length-1));const e=t.toUpperCase();for(let s=0;s<this.gripnames.length;s++){const t=this.gripnames[s];if(this.spinmatch(e,t))return t}return t}},r=class{notationToInternal(t){return t}notationToExternal(t){return t}},h=class{constructor(t,e){this.child=t,this.sw=e}notationToInternal(t){if("T"===t.family&&void 0===t.innerLayer&&void 0===t.outerLayer)return new i.yU(new i.VL("FLRv",t.innerLayer,t.outerLayer),t.amount);return this.child.notationToInternal(t)}notationToExternal(t){let e=t.family;return e.length>0&&"v"===e[e.length-1]&&(e=e.substring(0,e.length-1)),this.sw.spinmatch(e,"FLUR")?new i.yU(new i.VL("T",t.innerLayer,t.outerLayer),t.amount):this.child.notationToExternal(t)}},a=class{constructor(t,e){this.internalNames=t,this.externalNames=e}convertString(t,e,s){let i="";(t.endsWith("v")||t.endsWith("v"))&&t<="_"&&(i=t.slice(t.length-1),t=t.slice(0,t.length-1));const n=t.toUpperCase();let o=!1;return t!==n&&(o=!0,t=n),t=s.joinByFaceIndices(e.splitByFaceNames(t)),o&&(t=t.toLowerCase()),t+i}convert(t,e,s){const n=t.family,o=this.convertString(n,e,s);return n===o?t:new i.yU(new i.VL(o,t.innerLayer,t.outerLayer),t.amount)}notationToInternal(t){return this.convert(t,this.externalNames,this.internalNames)}notationToExternal(t){return this.convert(t,this.internalNames,this.externalNames)}},l=class{constructor(t){this.child=t}notationToInternal(t){if(void 0===t.innerLayer&&void 0===t.outerLayer){if(1===Math.abs(t.amount)){if("R++"===t.family)return new i.yU(new i.VL("L",3,2),-2*t.amount);if("R--"===t.family)return new i.yU(new i.VL("L",3,2),2*t.amount);if("D++"===t.family)return new i.yU(new i.VL("U",3,2),-2*t.amount);if("D--"===t.family)return new i.yU(new i.VL("U",3,2),2*t.amount);if("R_PLUSPLUS_"===t.family)return new i.yU(new i.VL("L",3,2),-2*t.amount);if("D_PLUSPLUS_"===t.family)return new i.yU(new i.VL("U",3,2),-2*t.amount)}if("y"===t.family)return new i.yU("Uv",t.amount);if("x"===t.family&&2===Math.abs(t.amount))return new i.yU("ERv",t.amount/2)}return this.child.notationToInternal(t)}notationToExternal(t){return"ERv"===t.family&&1===Math.abs(t.amount)?new i.yU(new i.VL("x",t.innerLayer,t.outerLayer),2*t.amount):"ILv"===t.family&&1===Math.abs(t.amount)?new i.yU(new i.VL("x",t.innerLayer,t.outerLayer),2*-t.amount):"Uv"===t.family?new i.yU(new i.VL("y",t.innerLayer,t.outerLayer),t.amount):"Dv"===t.family?new i.yU("y",-t.amount):this.child.notationToExternal(t)}},c=class{constructor(t){this.slices=t}notationToInternal(t){const e=t.family;return t.innerLayer||t.outerLayer||("x"===e?t=new i.yU("Rv",t.amount):"y"===e?t=new i.yU("Uv",t.amount):"z"===e&&(t=new i.yU("Fv",t.amount)),1===(1&this.slices)&&("E"===e?t=new i.yU(new i.VL("D",(this.slices+1)/2),t.amount):"M"===e?t=new i.yU(new i.VL("L",(this.slices+1)/2),t.amount):"S"===e&&(t=new i.yU(new i.VL("F",(this.slices+1)/2),t.amount))),this.slices>2&&("e"===e?t=new i.yU(new i.VL("D",this.slices-1,2),t.amount):"m"===e?t=new i.yU(new i.VL("L",this.slices-1,2),t.amount):"s"===e&&(t=new i.yU(new i.VL("F",this.slices-1,2),t.amount)))),t}notationToExternal(t){const e=t.family;if(!t.innerLayer&&!t.outerLayer){if("Rv"===e)return new i.yU("x",t.amount);if("Uv"===e)return new i.yU("y",t.amount);if("Fv"===e)return new i.yU("z",t.amount);if("Lv"===e)return new i.yU("x",-t.amount);if("Dv"===e)return new i.yU("y",-t.amount);if("Bv"===e)return new i.yU("z",-t.amount)}return t}},f={U:"frl",L:"fld",R:"fdr",B:"dlr",u:"FRL",l:"FLD",r:"FDR",b:"DLR",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R"},u={U:"FRL",L:"FLD",R:"FDR",B:"DLR",u:"frl",l:"fld",r:"fdr",b:"dlr",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R",d:"d",f:"f",bl:"l",br:"r"},m={U:"FRL",L:"FLD",R:"FDR",B:"DLR"},p=new i.VL("y"),d=new i.VL("Dv"),g=class{constructor(t){(0,n.Mu)(this,"wcaHack",!1),(0,n.Mu)(this,"map",f),this.child=t}notationToInternal(t){if(this.wcaHack&&2===t.innerLayer&&null===t.outerLayer){const e=m[t.family];if(e)return new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount)}const e=this.map[t.family];return e?new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount):p.isIdentical(t.quantum)?new i.yU(d,-t.amount):null}notationToExternal(t){if(this.wcaHack&&2===t.innerLayer&&null===t.outerLayer)for(const[e,s]of Object.entries(m))if(this.child.spinmatch(t.family,s))return new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount);for(const[e,s]of Object.entries(this.map))if(this.child.spinmatch(t.family,s))return new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount);return d.isIdentical(t.quantum)?new i.yU(p,-t.amount):null}},v=class extends g{constructor(t){super(t),(0,n.Mu)(this,"wcaHack",!0),this.map=u}},b={U:"UBL",UL:"ULF",F:"UFR",UR:"URB",B:"DBL",D:"DFR",L:"DLF",R:"DRB",Uv:"UBLv",ULv:"ULFv",Fv:"UFRv",URv:"URBv",Bv:"DBLv",Dv:"DFRv",Lv:"DLFv",Rv:"DRBv"},w=new i.VL("x"),y=new i.VL("Rv"),M=new i.VL("Lv"),L=new i.VL("y"),B=new i.VL("Uv"),x=new i.VL("Dv"),F=new i.VL("z"),R=new i.VL("Fv"),z=new i.VL("Bv"),D=class{constructor(t){this.child=t}notationToInternal(t){if(t.innerLayer||t.outerLayer)return null;const e=b[t.family];return e?new i.yU(new i.VL(e,t.outerLayer,t.innerLayer),t.amount):w.isIdentical(t.quantum)?new i.yU(y,t.amount):L.isIdentical(t.quantum)?new i.yU(B,t.amount):F.isIdentical(t.quantum)?new i.yU(R,t.amount):null}notationToExternal(t){for(const[e,s]of Object.entries(b))if(this.child.spinmatchv(t.family,s))return new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount);return y.isIdentical(t.quantum)?new i.yU(w,t.amount):M.isIdentical(t.quantum)?new i.yU(w,-t.amount):B.isIdentical(t.quantum)?new i.yU(L,t.amount):x.isIdentical(t.quantum)?new i.yU(L,-t.amount):R.isIdentical(t.quantum)?new i.yU(F,t.amount):z.isIdentical(t.quantum)?new i.yU(F,-t.amount):null}};function U(t){let e=0;const s={};for(;e<t.length&&"-"===t[e][0];){const i=t[e++];if("--rotations"===i)s.addRotations=!0;else if("--allmoves"===i)s.allMoves=!0;else if("--outerblockmoves"===i)s.outerBlockMoves=!0;else if("--vertexmoves"===i)s.vertexMoves=!0;else if("--nocorners"===i)s.includeCornerOrbits=!1;else if("--noedges"===i)s.includeEdgeOrbits=!1;else if("--noorientation"===i)s.fixedOrientation=!0;else if("--nocenters"===i)s.includeCenterOrbits=!1;else if("--omit"===i)s.excludeOrbits=t[e].split(","),e++;else if("--moves"===i)s.moveList=t[e].split(","),e++;else if("--optimize"===i)s.optimizeOrbits=!0;else if("--scramble"===i)s.scrambleAmount=100;else if("--fixcorner"===i)s.fixedPieceType="v";else if("--fixedge"===i)s.fixedPieceType="e";else if("--fixcenter"===i)s.fixedPieceType="f";else if("--orientcenters"===i)s.orientCenters=!0;else{if("--puzzleorientation"!==i)throw new Error(`Bad option: ${i}`);s.puzzleOrientation=JSON.parse(t[e]),e++}}return{puzzleDescription:ut(t.slice(e).join(" ")),options:s}}var k=class{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,n.Mu)(this,"verbosity",0),(0,n.Mu)(this,"allMoves",!1),(0,n.Mu)(this,"outerBlockMoves"),(0,n.Mu)(this,"vertexMoves",!1),(0,n.Mu)(this,"addRotations",!1),(0,n.Mu)(this,"moveList",null),(0,n.Mu)(this,"fixedOrientation",!1),(0,n.Mu)(this,"fixedPieceType",null),(0,n.Mu)(this,"orientCenters",!1),(0,n.Mu)(this,"includeCornerOrbits",!0),(0,n.Mu)(this,"includeCenterOrbits",!0),(0,n.Mu)(this,"includeEdgeOrbits",!0),(0,n.Mu)(this,"excludeOrbits",[]),(0,n.Mu)(this,"optimizeOrbits",!1),(0,n.Mu)(this,"grayCorners",!1),(0,n.Mu)(this,"grayCenters",!1),(0,n.Mu)(this,"grayEdges",!1),(0,n.Mu)(this,"puzzleOrientation",null),(0,n.Mu)(this,"puzzleOrientations",null),(0,n.Mu)(this,"scrambleAmount",0),Object.assign(this,t)}},E=[],C=[];function $(t){if(!E[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=0;E[t]=e}return E[t]}function O(t){if(!C[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=s;C[t]=e}return C[t]}function I(t,e){return t/function(t,e){if(t>e){const s=t;t=e,e=s}for(;t>0;){const s=e%t;e=t,t=s}return e}(t,e)*e}var P=class t{constructor(t){(0,n.Mu)(this,"n"),(0,n.Mu)(this,"p"),this.n=t.length,this.p=t}toString(){return`Perm[${this.p.join(" ")}]`}mul(e){const s=Array(this.n);for(let t=0;t<this.n;t++)s[t]=e.p[this.p[t]];return new t(s)}rmul(e){const s=Array(this.n);for(let t=0;t<this.n;t++)s[t]=this.p[e.p[t]];return new t(s)}inv(){const e=Array(this.n);for(let t=0;t<this.n;t++)e[this.p[t]]=t;return new t(e)}compareTo(t){for(let e=0;e<this.n;e++)if(this.p[e]!==t.p[e])return this.p[e]-t.p[e];return 0}toGap(){const t=new Array,e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;const i=new Array;for(let t=this.p[s];!e[t];t=this.p[t])i.push(1+t),e[t]=!0;t.push(`(${i.reverse().join(",")})`)}return t.join("")}toMathematica(){const t=new Array,e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;const i=new Array;for(let t=this.p[s];!e[t];t=this.p[t])i.push(1+t),e[t]=!0;t.push(`{${i.reverse().join(",")}}`)}return`Cycles[{${t.join(",")}}]`}order(){let t=1;const e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;let i=0;for(let t=s;!e[t];t=this.p[t])i++,e[t]=!0;t=I(t,i)}return t}},S=class{constructor(t,e){this.size=t,this.mod=e}reassemblySize(){return function(t){let e=BigInt(1);for(;t>1;)e*=BigInt(t),t--;return e}(this.size)*BigInt(this.mod)**BigInt(this.size)}},A=0;function T(t,e){const s=i.yU.fromString(e),n=t.notationToExternal(s);return null===n||s===n?e:n.toString()}var N,V=class t{constructor(t,e,s,i,n,o,r){this.orbitnames=t,this.orbitdefs=e,this.solved=s,this.movenames=i,this.moveops=n,this.isRotation=o,this.forcenames=r}toKTransformationData(t){const e={};for(let s=0;s<this.orbitnames.length;s++)e[this.orbitnames[s]]=t.orbits[s].toKTransformationOrbitData();return e}toKPatternData(t){const e={};for(let s=0;s<this.orbitnames.length;s++)e[this.orbitnames[s]]=t.orbits[s].toKPatternOrbitData();return e}static transformToKTransformationData(t,e){const s={};for(let i=0;i<t.length;i++)s[t[i]]=e.orbits[i].toKTransformationOrbitData();return s}describeSet(t,e,s){const i=this.orbitdefs[t].size,n=new Array(i);for(let o=0;o<i;o++)n[o]=[];for(let o=0;o<this.movenames.length;o++){if(this.isRotation[o])continue;let e=this.movenames[o];this.forcenames[o]||(e=T(s,e),"'"===e[e.length-1]&&(e=e.substring(0,e.length-1)));const r=this.moveops[o].orbits[t];for(let t=0;t<i;t++)r.perm[t]===t&&0===r.ori[t]||n[t].push(e)}for(let o=0;o<i;o++)e.push(`# ${o+1} ${n[o].join(" ")}`)}toKsolve(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new r;const s=[];s.push(`Name ${t}`),s.push("");for(let i=0;i<this.orbitnames.length;i++)s.push(`Set ${this.orbitnames[i]} ${this.orbitdefs[i].size} ${this.orbitdefs[i].mod}`),this.describeSet(i,s,e);s.push(""),s.push("Solved");for(let i=0;i<this.orbitnames.length;i++)this.solved.orbits[i].appendDefinition(s,this.orbitnames[i],!1,!1);s.push("End");for(let i=0;i<this.movenames.length;i++){s.push("");let t=this.movenames[i];this.forcenames[i]||(t=T(e,this.movenames[i]));let n=!1;"'"===t[t.length-1]&&(n=!0,t=t.substring(0,t.length-1)),s.push(`Move ${t}`);for(let e=0;e<this.orbitnames.length;e++)n?this.moveops[i].orbits[e].inv().appendDefinition(s,this.orbitnames[e],!0):this.moveops[i].orbits[e].appendDefinition(s,this.orbitnames[e],!0);s.push("End")}return s}toKPuzzleDefinition(t){const e=[],s={};for(let n=0;n<this.orbitnames.length;n++){e.push({orbitName:this.orbitnames[n],numPieces:this.orbitdefs[n].size,numOrientations:this.orbitdefs[n].mod});const t=this.solved.orbits[n].toKTransformationOrbitData();s[this.orbitnames[n]]={pieces:t.permutation,orientation:t.orientationDelta}}const i={};if(t)for(let n=0;n<this.movenames.length;n++)i[this.movenames[n]]=this.toKTransformationData(this.moveops[n]);return{name:"PG3D #"+ ++A,orbits:e,defaultPattern:s,moves:i}}optimize(){const e=[],s=[],i=[],n=[];for(let t=0;t<this.moveops.length;t++)n.push([]);for(let t=0;t<this.orbitdefs.length;t++){const o=this.orbitdefs[t].mod,r=this.orbitdefs[t].size,h=new _(r),a=new Array(this.orbitdefs[t].size);for(let t=0;t<r;t++)a[t]=!1;for(let e=0;e<this.moveops.length;e++)for(let s=0;s<r;s++)this.moveops[e].orbits[t].perm[s]===s&&0===this.moveops[e].orbits[t].ori[s]||(this.isRotation[e]||(a[s]=!0),h.union(s,this.moveops[e].orbits[t].perm[s]));let l=!0;if(o>1){l=!1;const e=new _(this.orbitdefs[t].size*o);for(let s=0;s<this.moveops.length;s++)for(let i=0;i<r;i++)if(this.moveops[s].orbits[t].perm[i]!==i||0!==this.moveops[s].orbits[t].ori[i])for(let n=0;n<o;n++)e.union(i*o+n,this.moveops[s].orbits[t].perm[i]*o+(n+this.moveops[s].orbits[t].ori[i])%o);for(let t=0;!l&&t<r;t++)for(let s=1;s<o;s++)e.find(t*o)===e.find(t*o+s)&&(l=!0);for(let s=0;!l&&s<r;s++)for(let e=0;e<s;e++)this.solved.orbits[t].perm[s]===this.solved.orbits[t].perm[e]&&(l=!0)}let c=-1,f=!1;for(let e=0;e<this.orbitdefs[t].size;e++)if(a[e]){const t=h.find(e);c<0?c=t:c!==t&&(f=!0)}for(let u=0;u<this.orbitdefs[t].size;u++){if(!a[u])continue;if(h.find(u)!==u)continue;const o=[],r=[];let c=0;for(let e=0;e<this.orbitdefs[t].size;e++)h.find(e)===u&&(o[c]=e,r[e]=c,c++);if(f?e.push(`${this.orbitnames[t]}_p${u}`):e.push(this.orbitnames[t]),l){s.push(new S(c,this.orbitdefs[t].mod)),i.push(this.solved.orbits[t].remapVS(o,c));for(let e=0;e<this.moveops.length;e++)n[e].push(this.moveops[e].orbits[t].remap(o,r,c))}else{s.push(new S(c,1)),i.push(this.solved.orbits[t].remapVS(o,c).killOri());for(let e=0;e<this.moveops.length;e++)n[e].push(this.moveops[e].orbits[t].remap(o,r,c).killOri())}}}return new t(e,s,new q(i),this.movenames,n.map((t=>new K(t))),this.isRotation,this.forcenames)}scramble(t){this.solved=this.solved.mul(this.getScrambleTransformation(t))}getScrambleTransformation(t){t<100&&(t=100);const e=[];for(let i=0;i<this.moveops.length;i++)e[i]=this.moveops[i];for(let i=0;i<e.length;i++){const t=Math.floor(Math.random()*e.length),s=e[i];e[i]=e[t],e[t]=s}t<e.length&&(t=e.length);for(let i=0;i<t;i++){const t=Math.floor(Math.random()*e.length),s=Math.floor(Math.random()*e.length),i=Math.floor(Math.random()*this.moveops.length);e[t]=e[t].mul(e[s]).mul(this.moveops[i]),Math.random()<.1&&(e[t]=e[t].mul(this.moveops[i]))}let s=e[0];for(let i=1;i<e.length;i++)s=s.mul(e[i]);return s}reassemblySize(){let t=BigInt(1);for(let e=0;e<this.orbitdefs.length;e++)t*=this.orbitdefs[e].reassemblySize();return t}},j=(N=class{constructor(t,e,s){this.perm=t,this.ori=e,this.orimod=s}static e(t,e){return new N(O(t),$(t),e)}mul(t){const e=this.perm.length,s=new Array(e);if(1===this.orimod){for(let i=0;i<e;i++)s[i]=this.perm[t.perm[i]];return new N(s,this.ori,this.orimod)}{const i=new Array(e);for(let n=0;n<e;n++)s[n]=this.perm[t.perm[n]],i[n]=(this.ori[t.perm[n]]+t.ori[n])%this.orimod;return new N(s,i,this.orimod)}}inv(){const t=this.perm.length,e=new Array(t),s=new Array(t);for(let i=0;i<t;i++)e[this.perm[i]]=i,s[this.perm[i]]=(this.orimod-this.ori[i])%this.orimod;return new N(e,s,this.orimod)}equal(t){const e=this.perm.length;for(let s=0;s<e;s++)if(this.perm[s]!==t.perm[s]||this.ori[s]!==t.ori[s])return!1;return!0}killOri(){const t=this.perm.length;for(let e=0;e<t;e++)this.ori[e]=0;return this.orimod=1,this}toPerm(){const t=this.orimod;if(1===t)return new P(this.perm);const e=this.perm.length,s=new Array(e*t);for(let i=0;i<e;i++)for(let e=0;e<t;e++)s[i*t+e]=t*this.perm[i]+(this.ori[i]+e)%t;return new P(s)}identicalPieces(){const t=[],e=this.perm.length,s=[];for(let i=0;i<e;i++){const n=this.perm[i];if(void 0===t[n]){const o=[i];t[n]=!0;for(let t=i+1;t<e;t++)this.perm[t]===n&&o.push(t);s.push(o)}}return s}order(){return this.toPerm().order()}isIdentity(){const t=this.perm.length;if(this.perm===O(t)&&this.ori===$(t))return!0;for(let e=0;e<t;e++)if(this.perm[e]!==e||0!==this.ori[e])return!1;return!0}zeroOris(){const t=this.perm.length;if(this.ori===$(t))return!0;for(let e=0;e<t;e++)if(0!==this.ori[e])return!1;return!0}remap(t,e,s){const i=new Array(s),n=new Array(s);for(let o=0;o<s;o++)i[o]=e[this.perm[t[o]]],n[o]=this.ori[t[o]];return new N(i,n,this.orimod)}remapVS(t,e){const s=new Array(e),i=new Array(e);let n=0;const o=[];for(let r=0;r<e;r++){const e=this.perm[t[r]];void 0===o[e]&&(o[e]=n++),s[r]=o[e],i[r]=this.ori[t[r]]}return new N(s,i,this.orimod)}appendDefinition(t,e,s){if((!(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])||!this.isIdentity())&&(t.push(e),t.push(this.perm.map((t=>t+1)).join(" ")),!this.zeroOris()))if(s){const e=new Array(this.ori.length);for(let t=0;t<e.length;t++)e[this.perm[t]]=this.ori[t];t.push(e.join(" "))}else t.push(this.ori.join(" "))}toKTransformationOrbitData(){const t=this.perm.length;return this.isIdentity()?(N.ktransformationCache[t]||(N.ktransformationCache[t]={permutation:O(t),orientationDelta:$(t)}),N.ktransformationCache[t]):{permutation:this.perm,orientationDelta:this.ori}}toKPatternOrbitData(){const t=this.perm.length;return{pieces:this.perm,orientation:this.ori,orientationMod:$(t)}}},(0,n.Mu)(N,"ktransformationCache",[]),N),G=class{constructor(t){this.orbits=t}internalMul(t){const e=[];for(let s=0;s<this.orbits.length;s++)e.push(this.orbits[s].mul(t.orbits[s]));return e}internalInv(){const t=[];for(const e of this.orbits)t.push(e.inv());return t}equal(t){for(let e=0;e<this.orbits.length;e++)if(!this.orbits[e].equal(t.orbits[e]))return!1;return!0}killOri(){for(const t of this.orbits)t.killOri();return this}toPerm(){const t=new Array;let e=0;for(const i of this.orbits){const s=i.toPerm();t.push(s),e+=s.n}const s=new Array(e);e=0;for(const i of t){for(let t=0;t<i.n;t++)s[e+t]=e+i.p[t];e+=i.n}return new P(s)}identicalPieces(){const t=[];let e=0;for(const s of this.orbits){const i=s.orimod,n=s.identicalPieces();for(let s=0;s<n.length;s++)t.push(n[s].map((t=>t*i+e)));e+=i*s.perm.length}return t}order(){let t=1;for(const e of this.orbits)t=I(t,e.order());return t}},K=class t extends G{mul(e){return new t(this.internalMul(e))}mulScalar(t){if(0===t)return this.e();let e=this;for(t<0&&(e=e.inv(),t=-t);0===(1&t);)e=e.mul(e),t>>=1;if(1===t)return e;let s=e,i=this.e();for(;t>0;)1&t&&(i=i.mul(s)),t>1&&(s=s.mul(s)),t>>=1;return i}inv(){return new t(this.internalInv())}e(){return new t(this.orbits.map((t=>j.e(t.perm.length,t.orimod))))}},q=class t extends G{mul(e){return new t(this.internalMul(e))}},_=class{constructor(t){(0,n.Mu)(this,"heads"),this.n=t,this.heads=new Array(t);for(let e=0;e<t;e++)this.heads[e]=e}find(t){let e=this.heads[t];return this.heads[e]===e||(e=this.find(this.heads[e]),this.heads[t]=e),e}union(t,e){const s=this.find(t),i=this.find(e);s<i?this.heads[i]=s:s>i&&(this.heads[s]=i)}};var H={"2x2x2":"c f 0","3x3x3":"c f 0.333333333333333","4x4x4":"c f 0.5 f 0","5x5x5":"c f 0.6 f 0.2","6x6x6":"c f 0.666666666666667 f 0.333333333333333 f 0","7x7x7":"c f 0.714285714285714 f 0.428571428571429 f 0.142857142857143","8x8x8":"c f 0.75 f 0.5 f 0.25 f 0","9x9x9":"c f 0.777777777777778 f 0.555555555555556 f 0.333333333333333 f 0.111111111111111","10x10x10":"c f 0.8 f 0.6 f 0.4 f 0.2 f 0","11x11x11":"c f 0.818181818181818 f 0.636363636363636 f 0.454545454545455 f 0.272727272727273 f 0.0909090909090909","12x12x12":"c f 0.833333333333333 f 0.666666666666667 f 0.5 f 0.333333333333333 f 0.166666666666667 f 0","13x13x13":"c f 0.846153846153846 f 0.692307692307692 f 0.538461538461538 f 0.384615384615385 f 0.230769230769231 f 0.0769230769230769","20x20x20":"c f 0 f .1 f .2 f .3 f .4 f .5 f .6 f .7 f .8 f .9","30x30x30":"c f 0 f .066667 f .133333 f .2 f .266667 f .333333 f .4 f .466667 f .533333 f .6 f .666667 f .733333 f .8 f .866667 f .933333","40x40x40":"c f 0 f .05 f .1 f .15 f .2 f .25 f .3 f .35 f .4 f .45 f .5 f .55 f .6 f .65 f .7 f .75 f .8 f .85 f .9 f .95",skewb:"c v 0","master skewb":"c v 0.275","professor skewb":"c v 0 v 0.38","compy cube":"c v 0.915641442663986",helicopter:"c e 0.707106781186547","curvy copter":"c e 0.83",dino:"c v 0.577350269189626","little chop":"c e 0",pyramorphix:"t e 0",mastermorphix:"t e 0.346184634065199",pyraminx:"t v 0.333333333333333 v 1.66666666666667",tetraminx:"t v 0.333333333333333","master pyraminx":"t v 0 v 1 v 2","master tetraminx":"t v 0 v 1","professor pyraminx":"t v -0.2 v 0.6 v 1.4 v 2.2","professor tetraminx":"t v -0.2 v 0.6 v 1.4","royal pyraminx":"t v -0.333333333333333 v 0.333333333333333 v 1 v 1.66666666666667 v 2.33333333333333","royal tetraminx":"t v -0.333333333333333 v 0.333333333333333 v 1 v 1.66666666666667","emperor pyraminx":"t v -0.428571428571429 v 0.142857142857143 v 0.714285714285714 v 1.28571428571429 v 1.85714285714286 v 2.42857142857143","emperor tetraminx":"t v -0.428571428571429 v 0.142857142857143 v 0.714285714285714 v 1.28571428571429 v 1.85714285714286","Jing pyraminx":"t f 0","master pyramorphix":"t e 0.866025403784437",megaminx:"d f 0.7",gigaminx:"d f 0.64 f 0.82",teraminx:"d f 0.64 f 0.76 f 0.88",petaminx:"d f 0.64 f 0.73 f 0.82 f 0.91",examinx:"d f 0.64 f 0.712 f 0.784 f 0.856 f 0.928",zetaminx:"d f 0.64 f 0.7 f 0.76 f 0.82 f 0.88 f 0.94",yottaminx:"d f 0.64 f 0.6914 f 0.7429 f 0.7943 f 0.8457 f 0.8971 f 0.9486",pentultimate:"d f 0","master pentultimate":"d f 0.1","elite pentultimate":"d f 0 f 0.145905",starminx:"d v 0.937962370425399","starminx 2":"d f 0.23606797749979","pyraminx crystal":"d f 0.447213595499989",chopasaurus:"d v 0","big chop":"d e 0","skewb diamond":"o f 0",FTO:"o f 0.333333333333333","master FTO":"o f 0.5 f 0","Christopher's jewel":"o v 0.577350269189626",octastar:"o e 0","Trajber's octahedron":"o v 0.433012701892219","radio chop":"i f 0",icosamate:"i v 0","Regular Astrominx":"i v 0.18759247376021","Regular Astrominx + Big Chop":"i v 0.18759247376021 e 0",Redicosahedron:"i v 0.794654472291766","Redicosahedron with centers":"i v 0.84",Icosaminx:"i v 0.73","Eitan's star":"i f 0.61803398874989","2x2x2 + dino":"c f 0 v 0.577350269189626","2x2x2 + little chop":"c f 0 e 0","dino + little chop":"c v 0.577350269189626 e 0","2x2x2 + dino + little chop":"c f 0 v 0.577350269189626 e 0","megaminx + chopasaurus":"d f 0.61803398875 v 0","starminx combo":"d f 0.23606797749979 v 0.937962370425399"},J=1e-9;function Q(t){let e=new Z(0,0,0,0);for(let s=0;s<t.length;s++)e=e.sum(t[s]);return e.smul(1/t.length)}function W(t,e,s,i){const n=i[t].intersect3(i[e],i[s]);if(!n)return n;for(let o=0;o<i.length;o++)if(o!==t&&o!==e&&o!==s){const t=i[o].b*n.b+i[o].c*n.c+i[o].d*n.d;if(i[o].a>0&&t>i[o].a||i[o].a<0&&t<i[o].a)return!1}return n}var Z=class t{constructor(t,e,s,i){this.a=t,this.b=e,this.c=s,this.d=i}mul(e){return new t(this.a*e.a-this.b*e.b-this.c*e.c-this.d*e.d,this.a*e.b+this.b*e.a+this.c*e.d-this.d*e.c,this.a*e.c-this.b*e.d+this.c*e.a+this.d*e.b,this.a*e.d+this.b*e.c-this.c*e.b+this.d*e.a)}toString(){return`Q[${this.a},${this.b},${this.c},${this.d}]`}dist(t){return Math.hypot(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d)}len(){return Math.hypot(this.a,this.b,this.c,this.d)}cross(e){return new t(0,this.c*e.d-this.d*e.c,this.d*e.b-this.b*e.d,this.b*e.c-this.c*e.b)}dot(t){return this.b*t.b+this.c*t.c+this.d*t.d}normalize(){const e=Math.sqrt(this.dot(this));return new t(this.a/e,this.b/e,this.c/e,this.d/e)}makenormal(){return new t(0,this.b,this.c,this.d).normalize()}normalizeplane(){const e=Math.hypot(this.b,this.c,this.d);return new t(this.a/e,this.b/e,this.c/e,this.d/e)}smul(e){return new t(this.a*e,this.b*e,this.c*e,this.d*e)}sum(e){return new t(this.a+e.a,this.b+e.b,this.c+e.c,this.d+e.d)}sub(e){return new t(this.a-e.a,this.b-e.b,this.c-e.c,this.d-e.d)}angle(){return 2*Math.acos(this.a)}invrot(){return new t(this.a,-this.b,-this.c,-this.d)}det3x3(t,e,s,i,n,o,r,h,a){return t*(n*a-o*h)+e*(o*r-i*a)+s*(i*h-n*r)}rotateplane(e){const s=e.mul(new t(0,this.b,this.c,this.d)).mul(e.invrot());return s.a=this.a,s}orthogonal(){const e=Math.abs(this.b),s=Math.abs(this.c),i=Math.abs(this.d);return e<s&&e<i?this.cross(new t(0,1,0,0)).normalize():s<e&&s<i?this.cross(new t(0,0,1,0)).normalize():this.cross(new t(0,0,0,1)).normalize()}pointrotation(e){const s=this.normalize();if(e=e.normalize(),s.sub(e).len()<J)return new t(1,0,0,0);let i=s.sum(e);i=i.len()<J?i.orthogonal():i.normalize();const n=s.cross(i);return n.a=s.dot(i),n}unproject(t){return this.sum(t.smul(-this.dot(t)/(this.len()*t.len())))}rotatepoint(t){return t.mul(this).mul(t.invrot())}rotateface(t){return t.map((t=>t.rotatepoint(this)))}intersect3(e,s){const i=this.det3x3(this.b,this.c,this.d,e.b,e.c,e.d,s.b,s.c,s.d);return!(Math.abs(i)<J)&&new t(0,this.det3x3(this.a,this.c,this.d,e.a,e.c,e.d,s.a,s.c,s.d)/i,this.det3x3(this.b,this.a,this.d,e.b,e.a,e.d,s.b,s.a,s.d)/i,this.det3x3(this.b,this.c,this.a,e.b,e.c,e.a,s.b,s.c,s.a)/i)}side(t){return t>J?1:t<-J?-1:0}cutface(t){const e=this.a;let s=0,i=null;for(let n=0;n<t.length;n++)s|=1<<this.side(t[n].dot(this)-e)+1;if(5===(5&s)){i=[];const s=t.map((t=>this.side(t.dot(this)-e)));for(let n=-1;n<=1;n+=2){const o=[];for(let i=0;i<t.length;i++){s[i]!==n&&0!==s[i]||o.push(t[i]);const r=(i+1)%t.length;if(s[i]+s[r]===0&&0!==s[i]){const s=t[i].dot(this)-e,n=s/(s-(t[r].dot(this)-e)),h=t[i].smul(1-n).sum(t[r].smul(n));o.push(h)}}i.push(o)}}return i}cutfaces(t){const e=[];for(let s=0;s<t.length;s++){const i=t[s],n=this.cutface(i);n?(e.push(n[0]),e.push(n[1])):e.push(i)}return e}faceside(t){const e=this.a;for(let s=0;s<t.length;s++){const i=this.side(t[s].dot(this)-e);if(0!==i)return i}throw new Error("Could not determine side of plane in faceside")}sameplane(t){const e=this.normalize(),s=t.normalize();return e.dist(s)<J||e.dist(s.smul(-1))<J}makecut(e){return new t(e,this.b,this.c,this.d)}},X=1e-9;function Y(t,e){const s=[],i=[];for(let n=0;n<e.length;n++){const o=t.rotateplane(e[n]);let r=!1;for(let t=0;t<s.length;t++)if(o.dist(s[t])<X){r=!0;break}r||(s.push(o),i.push(e[n]))}return i}function tt(t){const e=[];for(let s=1;s<t.length;s++)for(let i=s+1;i<t.length;i++){const n=W(0,s,i,t);if(n){let t=!1;for(let s=0;s<e.length;s++)if(n.dist(e[s])<X){t=!0;break}t||e.push(n)}}for(;;){let s=!1;for(let i=0;i<e.length;i++){const n=(i+1)%e.length;if(t[0].dot(e[i].cross(e[n]))<0){const t=e[i];e[i]=e[n],e[n]=t,s=!0}}if(!s)break}return e}var et=class{constructor(){(0,n.Mu)(this,"mult"),this.mult=[]}multiply(t){for(let e=2;e*e<=t;e++)for(;t%e===0;)void 0!==this.mult[e]?this.mult[e]++:this.mult[e]=1,t/=e;t>1&&(void 0!==this.mult[t]?this.mult[t]++:this.mult[t]=1)}toString(){let t="";for(let e=0;e<this.mult.length;e++)void 0!==this.mult[e]&&(""!==t&&(t+="*"),t+=e,this.mult[e]>1&&(t+=`^${this.mult[e]}`));return t}};function st(t,e){const s=t[0].p.length,i=function(t){return new P(O(t))}(s);let n=[],o=[],r=[],h=[],a=[];function l(t,e,s){h[t].push(e),a[t].push(s);for(let i=0;i<n[t].length;i++)n[t][i]&&c(t,n[t][i].mul(e),s+r[t][i])}function c(t,e,s){const i=e.p[t];if(!n[t][i]){n[t][i]=e,o[t][i]=e.inv(),r[t][i]=s;for(let i=0;i<h[t].length;i++)c(t,e.mul(h[t][i]),s+a[t][i]);return}const f=e.mul(o[t][i]);(function(t){for(let e=t.p.length-1;e>=0;e--){const s=t.p[e];if(s!==e){if(!n[e][s])return!1;t=t.mul(o[e][s])}}return!0})(f)||l(t-1,f,s+r[t][i])}return function(){n=[],o=[],h=[],r=[],a=[];for(let t=0;t<s;t++)n.push([]),o.push([]),r.push([]),h.push([]),a.push([]),n[t][t]=i,o[t][t]=i,r[t][t]=0;let c=0,f=BigInt(1);for(let i=0;i<t.length;i++){l(s-1,t[i],1),f=BigInt(1);let o=0,a=0;const u=[],m=new et;for(let t=0;t<s;t++){let e=0,i=0;for(let o=0;o<s;o++)n[t][o]&&(e++,i+=r[t][o],t!==o&&c++);o+=h[t].length,f*=BigInt(e),e>1&&m.multiply(e);const l=i/e;u.push(l),a+=l}e(`${i}: sz ${f} T ${o} sol ${a} none ${c} mults ${m.toString()}`)}return f}()}var it=class t{constructor(t){(0,n.Mu)(this,"coords"),(0,n.Mu)(this,"length"),this.coords=new Array(3*t.length);for(let e=0;e<t.length;e++)this.coords[3*e]=t[e].b,this.coords[3*e+1]=t[e].c,this.coords[3*e+2]=t[e].d;this.length=t.length}get(t){return new Z(0,this.coords[3*t],this.coords[3*t+1],this.coords[3*t+2])}centermass(){let t=0,e=0,s=0;for(let i=0;i<this.length;i++)t+=this.coords[3*i],e+=this.coords[3*i+1],s+=this.coords[3*i+2];return new Z(0,t/this.length,e/this.length,s/this.length)}rotate(e){const s=[];for(let t=0;t<this.length;t++)s.push(this.get(t).rotatepoint(e));return new t(s)}rotateforward(){const e=[];for(let t=1;t<this.length;t++)e.push(this.get(t));return e.push(this.get(0)),new t(e)}},nt=class t{constructor(t,e,s){this.face=t,this.left=e,this.right=s}split(e){const s=e.cutface(this.face);return null!==s&&(void 0===this.left?(this.left=new t(s[0]),this.right=new t(s[1])):(this.left=this.left?.split(e),this.right=this.right?.split(e))),this}collect(t,e){return void 0===this.left?t.push(new it(this.face)):e?(this.left?.collect(t,!1),this.right?.collect(t,!0)):(this.right?.collect(t,!1),this.left?.collect(t,!0)),t}};var ot=1e-9;var rt={4:{v:["DFR","DLF","DRL","FLR"],e:["FR","LF","DF","DL","RD","RL"],c:["DF","FD","RL","LR"]},6:{v:["URF","UBR","ULB","UFL","DFR","DRB","DBL","DLF"],e:["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],c:["UB","LU","FU","RU","BU","DF"]},8:{v:["UBBBRR","URFL","ULBLBB","DBRBBBL","DBLLF","DFRBR"],e:["UL","UBB","UR","BRD","BLD","FD","BRR","FR","FL","BLL","BLBB","BRBB"],c:["BBU","LU","RU","BRD","FD","BLD","DF","UBB"]},12:{v:["URF","UFL","ULBL","UBLBR","UBRR","DEBF","DBFI","DIA","DAC","DCE","LAI","ALF","FCA","CFR","REC","ERBR","BRBFE","BFBRBL","BLIBF","IBLL"],e:["UF","UR","UBR","UBL","UL","ER","EBR","EBF","ED","EC","IBF","IBL","IL","IA","ID","AC","CF","FA","BFBR","BRBL","BLBF","CD","AD","AL","FL","FR","CR","BFD","BRR","BLL"],c:["UF","FU","DBF","BFD","AD","CD","BRU","BLU","LA","RA","EBR","IBL"]},20:{v:["FLPQU","FUGER","FRCAL","HCREI","ISBDH","JSIEG","BSJMK","MQPOK","ONDBK","NOPLA","UQMJG","DNACH"],e:["FU","FL","FR","EG","ER","EI","SJ","SI","SB","KM","KB","KO","PQ","PO","PL","UG","JG","MQ","UQ","HC","HD","ND","NA","JM","CA","AL","CR","HI","DB","NO"],c:["FU","UF","GE","EG","JS","SJ","MK","KM","QP","PQ","LA","AL","RC","CR","IH","HI","BD","DB","ON","NO"]}};function ht(t,e){for(let s=0;s<t.length;s++)if(t[s][0].dist(e)<ot)return s;throw new Error("Element not found")}function at(){return H}function lt(t){return H[t]}var ct=["c","t","o","d","i"],ft=["f","v","e"];function ut(t){const e=t.split(/ /).filter(Boolean);if(e.length%2===0)return null;const s=e[0];if("o"!==s&&"c"!==s&&"i"!==s&&"d"!==s&&"t"!==s)return null;const i=[];for(let n=1;n<e.length;n+=2){if("f"!==e[n]&&"v"!==e[n]&&"e"!==e[n])return null;i.push({cutType:e[n],distance:parseFloat(e[n+1])})}return{shape:s,cuts:i}}function mt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=ut(t);if(null===s)throw new Error("Could not parse the puzzle description");const i=new wt(s,Object.assign({},{allMoves:!0},e));return i.allstickers(),i.genperms(),i}function pt(t,e){return mt(H[t],e)}function dt(t,e,s){let i=!1;s-e[1]<e[0]&&(t=[t[2],t[3],t[0],t[1]],e=[s-e[1],s-e[0]],i=!0);let n=t[0],o="";if(0===e[0]&&e[1]===s)n=`${n}v`;else if(e[0]===e[1])e[1]>0&&(o=String(e[1]+1));else{if(0!==e[0])throw new Error(`We only support slice and outer block moves right now. ${e}`);n=n.toLowerCase(),e[1]>1&&(o=String(e[1]+1))}return[o+n,i]}function gt(t,e){const s=[];let i=0;for(;i<t.length;){i>0&&i<t.length&&"_"===t[i]&&i++;let n="";for(const s of e)t.substr(i).startsWith(s[1])&&s[1].length>n.length&&(n=s[1]);if(""===n)throw new Error(`Could not split ${t} into face names.`);s.push(n),i+=n.length}return s}function vt(t,e){return[t.b/e,-t.c/e,t.d/e]}function bt(t,e){const s=[],i=t.length;for(let n=0;n<i;n++){const o=vt(t.get(i-n-1),e);s[3*n]=o[0],s[3*n+1]=o[1],s[3*n+2]=o[2]}return s}var wt=class{constructor(t,e){(0,n.Mu)(this,"rotations"),(0,n.Mu)(this,"baseplanerot"),(0,n.Mu)(this,"baseplanes"),(0,n.Mu)(this,"facenames"),(0,n.Mu)(this,"faceplanes"),(0,n.Mu)(this,"edgenames"),(0,n.Mu)(this,"vertexnames"),(0,n.Mu)(this,"geonormals"),(0,n.Mu)(this,"moveplanes"),(0,n.Mu)(this,"moveplanes2"),(0,n.Mu)(this,"moveplanesets"),(0,n.Mu)(this,"moveplanenormals"),(0,n.Mu)(this,"movesetorders"),(0,n.Mu)(this,"movesetgeos"),(0,n.Mu)(this,"basefaces"),(0,n.Mu)(this,"faces"),(0,n.Mu)(this,"facecentermass"),(0,n.Mu)(this,"baseFaceCount"),(0,n.Mu)(this,"stickersperface"),(0,n.Mu)(this,"shortedge"),(0,n.Mu)(this,"markedface"),(0,n.Mu)(this,"cubies"),(0,n.Mu)(this,"vertexdistance"),(0,n.Mu)(this,"edgedistance"),(0,n.Mu)(this,"facetocubie"),(0,n.Mu)(this,"facetoord"),(0,n.Mu)(this,"moverotations"),(0,n.Mu)(this,"facelisthash"),(0,n.Mu)(this,"cubiesetnames"),(0,n.Mu)(this,"cubieords"),(0,n.Mu)(this,"cubiesetnums"),(0,n.Mu)(this,"cubieordnums"),(0,n.Mu)(this,"orbitoris"),(0,n.Mu)(this,"cubievaluemap"),(0,n.Mu)(this,"cubiesetcubies"),(0,n.Mu)(this,"cmovesbyslice",[]),(0,n.Mu)(this,"parsedmovelist"),(0,n.Mu)(this,"duplicatedFaces",[]),(0,n.Mu)(this,"duplicatedCubies",[]),(0,n.Mu)(this,"fixedCubie",-1),(0,n.Mu)(this,"net",[]),(0,n.Mu)(this,"colors",[]),(0,n.Mu)(this,"swizzler"),(0,n.Mu)(this,"notationMapper",new r),(0,n.Mu)(this,"addNotationMapper",""),(0,n.Mu)(this,"setReidOrder",!1),(0,n.Mu)(this,"options"),this.puzzleDescription=t;this.options=new k(e),this.options.verbosity>0&&console.log(this.header("# ")),this.create(t)}create(t){const{shape:e,cuts:s}=t;this.moveplanes=[],this.moveplanes2=[],this.faces=[],this.cubies=[];let i=null;switch(e){case"c":i=function(){const t=Math.sqrt(.5);return[new Z(t,t,0,0),new Z(t,0,t,0)]}();break;case"o":i=function(){const t=Math.sqrt(.5);return[new Z(.5,.5,.5,.5),new Z(t,0,0,t)]}();break;case"i":i=function(){let t=1/6+Math.sqrt(5)/6,e=2/3+Math.sqrt(5)/3;const s=Math.sqrt(t*t+e*e);t/=s,e/=s;const i=2*Math.PI/6;return[new Z(Math.cos(i),t*Math.sin(i),e*Math.sin(i),0),new Z(Math.cos(i),-t*Math.sin(i),e*Math.sin(i),0)]}();break;case"t":i=[new Z(.5,.5,.5,.5),new Z(.5,.5,.5,-.5)];break;case"d":i=function(){const t=2*Math.PI/10;let e=.5+.3*Math.sqrt(5),s=.5+.1*Math.sqrt(5);const i=Math.sqrt(e*e+s*s);return e/=i,s/=i,[new Z(Math.cos(t),e*Math.sin(t),s*Math.sin(t),0),new Z(.5,.5,.5,.5)]}();break;default:throw new Error(`Bad shape argument: ${e}`)}this.rotations=function(t){const e=[new Z(1,0,0,0)];for(let s=0;s<e.length;s++)for(let i=0;i<t.length;i++){const n=t[i].mul(e[s]),o=n.smul(-1);let r=!1;for(let t=0;t<e.length;t++)if(n.dist(e[t])<X||o.dist(e[t])<X){r=!0;break}r||e.push(n)}return e}(i),this.options.verbosity&&console.log(`# Rotations: ${this.rotations.length}`);const n=i[0];this.baseplanerot=Y(n,this.rotations);const r=this.baseplanerot.map((t=>n.rotateplane(t)));this.baseplanes=r,this.baseFaceCount=r.length;const h={4:[["F","D","L","R"]],6:[["F","D","L","U","R"],["R","F","","B",""]],8:[["F","D","L","R"],["D","F","BR",""],["BR","D","","BB"],["BB","BR","U","BL"]],12:[["U","F","","","",""],["F","U","R","C","A","L"],["R","F","","","E",""],["E","R","","BF","",""],["BF","E","BR","BL","I","D"]],20:[["R","C","F","E"],["F","R","L","U"],["L","F","A",""],["E","R","G","I"],["I","E","S","H"],["S","I","J","B"],["B","S","K","D"],["K","B","M","O"],["O","K","P","N"],["P","O","Q",""]]}[r.length];this.net=h,this.colors={4:{F:"#44ee00",D:"#f4f400",L:"#ff0000",R:"#2266ff"},6:{U:"#ffffff",F:"#44ee00",R:"#ff0000",D:"#f4f400",B:"#2266ff",L:"#ff8000"},8:{U:"#ffffff",F:"#44ee00",R:"#ff0000",D:"#f4f400",BB:"#2266ff",L:"#8800dd",BL:"#ff8000",BR:"#888888"},12:{U:"#ffffff",F:"#008800",R:"#ff0000",C:"#e8d0a0",A:"#3399ff",L:"#8800dd",E:"#ff66cc",BF:"#99ff00",BR:"#0000ff",BL:"#f4f400",I:"#ff8000",D:"#888888"},20:{R:"#f4f400",C:"#d41f69",F:"#008800",E:"#5c5c5c",L:"#8800dd",U:"#ffffff",A:"#007a89",G:"#ff0000",I:"#7d3b11",S:"#b9a1ff",H:"#3399ff",J:"#5ec4b6",B:"#44ee00",K:"#e8d0a0",D:"#aaaaaa",M:"#ff66cc",O:"#292929",P:"#ff8000",N:"#980000",Q:"#0000ff"}}[r.length],this.options.verbosity>0&&console.log(`# Base planes: ${r.length}`);const l=tt(r),c=new Z(0,0,0,0);this.options.verbosity>0&&console.log(`# Face vertices: ${l.length}`);const f=r[0].makenormal(),u=l[0].sum(l[1]).makenormal(),m=l[0].makenormal(),p=new Z(1,f.b,f.c,f.d);this.options.verbosity>0&&console.log(`# Boundary is ${p}`);const d=tt(Y(p,this.rotations).map((t=>p.rotateplane(t))));this.edgedistance=d[0].sum(d[1]).smul(.5).dist(c),this.vertexdistance=d[0].dist(c);const g=[],v=[];let b=!1,w=!1,y=!1;for(const o of s){let t=null,e=0;switch(o.cutType){case"f":t=f,e=1,b=!0;break;case"v":t=m,e=this.vertexdistance,y=!0;break;case"e":t=u,e=this.edgedistance,w=!0;break;default:throw new Error(`Bad cut argument: ${o.cutType}`)}g.push(t.makecut(o.distance)),v.push(o.distance<e)}this.options.addRotations&&(b||g.push(f.makecut(10)),y||g.push(m.makecut(10)),w||g.push(u.makecut(10))),this.basefaces=[];for(const o of this.baseplanerot){const t=o.rotateface(d);this.basefaces.push(new it(t))}const M=[],L=[],B=[],x=[],F=d.length;function R(t,e,s){for(const i of t)if(i[0].dist(e)<ot)return void i.push(s);t.push([e,s])}for(let o=0;o<this.baseplanerot.length;o++){const t=this.baseplanerot[o].rotateface(d);for(let e=0;e<t.length;e++){const s=(e+1)%t.length;R(x,t[e].sum(t[s]).smul(.5),o)}}const z=[];for(let o=0;o<this.baseplanerot.length;o++){const t=this.baseplanerot[o].rotateface(d),e=[];for(let s=0;s<t.length;s++){const i=(s+1)%t.length,n=x[ht(x,t[s].sum(t[i]).smul(.5))];if(o===n[1])e.push(n[2]);else{if(o!==n[2])throw new Error("Could not find edge");e.push(n[1])}}z.push(e)}const D={},U=[];U.push(h[0][0]),D[h[0][0]]=0,U[z[0][0]]=h[0][1],D[h[0][1]]=z[0][0];for(const o of h){const t=D[o[0]];if(void 0===t)throw new Error("Bad edge description; first edge not connected");let e=-1;for(let s=0;s<z[t].length;s++){const i=U[z[t][s]];if(void 0!==i&&i===o[1]){e=s;break}}if(e<0)throw new Error("First element of a net not known");for(let s=2;s<o.length;s++){if(""===o[s])continue;const i=z[t][(s+e-1)%F],n=U[i];if(void 0!==n&&n!==o[s])throw new Error("Face mismatch in net");U[i]=o[s],D[o[s]]=i}}for(let o=0;o<this.baseplanerot.length;o++){const t=this.baseplanerot[o].rotateface(d),e=p.rotateplane(this.baseplanerot[o]),s=U[o];M.push([t,s]),L.push([e,s])}for(let o=0;o<this.baseplanerot.length;o++){const t=this.baseplanerot[o].rotateface(d),e=U[o];for(let s=0;s<t.length;s++){const i=(s+1)%t.length,n=t[s].sum(t[i]).smul(.5),o=(s+2)%t.length,r=t[i].sum(t[o]).smul(.5),h=ht(x,n),a=ht(x,r);R(B,t[i],[e,a,h])}}this.swizzler=new o(M.map((t=>t[1])));const k=this.swizzler.prefixFree?"":"_",E=rt[this.baseFaceCount],C=[];for(let o=0;o<this.baseFaceCount;o++)C[1<<o]=o;{const t=E.v;for(const e of t){const t=this.swizzler.splitByFaceNames(e);let s=0;for(const e of t)s|=1<<e;C[s]=t[0]}}{const t=E.e;for(const e of t){const t=this.swizzler.splitByFaceNames(e);let s=0;for(const e of t)s|=1<<e;C[s]=t[0]}}{const t=E.c;for(const e of t){const t=this.swizzler.splitByFaceNames(e);C[1<<t[0]|1<<this.baseFaceCount]=t[1]}}for(let o=0;o<x.length;o++){if(3!==x[o].length)throw new Error(`Bad length in edge names ${x[o]}`);const t=x[o][1],e=x[o][2];let s=U[t];const i=U[e];s=C[1<<t|1<<e]===t?s+k+i:i+k+s,x[o]=[x[o][0],s]}for(let o=0;o<B.length;o++){let t=0;if(B[o].length<4)throw new Error("Bad length in vertex names");for(let n=1;n<B[o].length;n++)t|=1<<D[B[o][n][0]];const e=C[t];let s=-1;for(let n=1;n<B[o].length;n++)e===D[B[o][n][0]]&&(s=n);if(s<0)throw new Error("Internal error; couldn't find face name when fixing corners");let i="";for(let n=1;n<B[o].length;n++){i=1===n?B[o][s][0]:i+k+B[o][s][0];for(let t=1;t<B[o].length;t++)if(B[o][s][1]===B[o][t][2]){s=t;break}}B[o]=[B[o][0],i]}this.markedface=C,this.options.verbosity>1&&(console.log(`# Face names: ${M.map((t=>t[1])).join(" ")}`),console.log(`# Edge names: ${x.map((t=>t[1])).join(" ")}`),console.log(`# Vertex names: ${B.map((t=>t[1])).join(" ")}`));const $=[];for(const o of L)$.push([o[0].makenormal(),o[1],"f"]);for(const o of x)$.push([o[0].makenormal(),o[1],"e"]);for(const o of B)$.push([o[0].makenormal(),o[1],"v"]);this.facenames=M,this.faceplanes=L,this.edgenames=x,this.vertexnames=B,this.geonormals=$;const O=$.map((t=>t[1]));this.swizzler.setGripNames(O),this.options.verbosity>0&&console.log(`# Distances: face 1 edge ${this.edgedistance} vertex ${this.vertexdistance}`);for(let o=0;o<g.length;o++)for(const t of this.rotations){const e=g[o].rotateplane(t);let s=!1;for(const t of this.moveplanes)if(e.sameplane(t)){s=!0;break}s||(this.moveplanes.push(e),v[o]&&this.moveplanes2.push(e))}let I=new nt(d);const P=this.moveplanes2.slice();let S=31;for(let o=0;o<P.length;o++){const t=o+Math.floor((P.length-o)*(S/65536));I=I.split(P[t]),P[t]=P[o],S=(1657*S+101)%65536}const A=I.collect([],!0);this.faces=A,this.options.verbosity>0&&console.log(`# Faces is now ${A.length}`),this.stickersperface=A.length;const T=[],N=Q(d);for(const o of this.rotations){const t=o.rotateface(d);N.dist(Q(t))<ot&&T.push(o)}const V=new Array(A.length),j=[];for(let o=0;o<A.length;o++){const t=A[o].centermass();j.push([N.dist(t),t,o])}j.sort(((t,e)=>t[0]-e[0]));for(let o=0;o<A.length;o++){const t=j[o][2];if(!V[t]){V[t]=!0;for(const e of T){const s=A[t].rotate(e),i=s.centermass();for(let t=o+1;t<A.length&&!(j[t][0]-j[o][0]>ot);t++){const e=j[t][2];if(!V[e]&&i.dist(j[t][1])<ot){V[e]=!0,A[e]=s;break}}}}}this.shortedge=1e99;for(const o of A)for(let t=0;t<o.length;t++){const e=(t+1)%o.length,s=o.get(t).dist(o.get(e));s<this.shortedge&&(this.shortedge=s)}this.options.verbosity>0&&console.log(`# Short edge is ${this.shortedge}`),"c"!==e||!b||w||y||(this.addNotationMapper="NxNxNCubeMapper",this.setReidOrder=!0),"c"!==e||!y||b||w||(this.addNotationMapper="SkewbMapper"),"t"!==e||!y&&!b||w||(this.addNotationMapper="PyraminxOrTetraminxMapper"),"o"===e&&b&&(this.notationMapper=new a(this.swizzler,new o(["F","D","L","BL","R","U","BR","B"])),w||y||(this.addNotationMapper="FTOMapper")),"d"===e&&b&&(this.addNotationMapper="MegaminxMapper",this.notationMapper=new a(this.swizzler,new o(["U","F","L","BL","BR","R","FR","FL","DL","B","DR","D"])))}keyface(t){return this.keyface2(t.centermass())}keyface2(t){let e="";const s=String.fromCharCode;for(const i of this.moveplanesets)if(i.length>0){const n=t.dot(i[0]);let o=0,r=1;for(;2*r<=i.length;)r*=2;for(;r>0;r>>=1)o+r<=i.length&&n>i[o+r-1].a&&(o+=r);if(o<47)e+=s(33+o);else if(o<2256)e=e+s(80+Math.floor(o/47)-1)+s(33+o%47);else{if(!(o<106079))throw Error("Too many slices for cubie encoding");e=e+s(80+Math.floor((o-47)/2209-1))+s(80+Math.floor((o-47)/47)%47)+s(33+o%47)}}return e}keyface3(t){const e=t.centermass(),s=[];for(const i of this.moveplanesets)if(i.length>0){const t=e.dot(i[0]);let n=0,o=1;for(;2*o<=i.length;)o*=2;for(;o>0;o>>=1)n+o<=i.length&&t>i[n+o-1].a&&(n+=o);s.push(n)}return s}findface(t){const e=this.keyface2(t),s=this.facelisthash.get(e);if(1===s.length)return s[0];for(let i=0;i+1<s.length;i++){const s=this.facelisthash.get(e)[i];if(Math.abs(t.dist(this.facecentermass[s]))<ot)return s}return s[s.length-1]}project2d(t,e,s){const i=this.facenames[t][0],n=(e+1)%i.length,o=this.baseplanes[t];let r=i[n].sub(i[e]);const h=r.len();r=r.normalize();const a=r.cross(o).normalize();let l=s[1].sub(s[0]);const c=l.len()/h;l=l.normalize();const f=l.b,u=l.c,m=r.smul(f).sub(a.smul(u)).smul(c),p=a.smul(f).sum(r.smul(u)).smul(c),d=new Z(0,s[0].b-m.dot(i[e]),s[0].c-p.dot(i[e]),0);return[m,p,d]}allstickers(){this.faces=function(t,e){const s=[];for(const i of t)for(const t of e)s.push(t.rotate(i));return s}(this.baseplanerot,this.faces),this.options.verbosity>0&&console.log(`# Total stickers is now ${this.faces.length}`),this.facecentermass=new Array(this.faces.length);for(let h=0;h<this.faces.length;h++)this.facecentermass[h]=this.faces[h].centermass();const t=[],e=[];for(const h of this.moveplanes){const s=h.makenormal();let i=!1;for(const t of e)s.sameplane(t.makenormal())&&(i=!0);i||(e.push(s),t.push([]))}for(const h of this.moveplanes2){const s=h.makenormal();for(let i=0;i<e.length;i++)if(s.sameplane(e[i])){t[i].push(h);break}}for(let h=0;h<t.length;h++){const s=t[h].map((t=>t.normalizeplane())),i=e[h];for(let t=0;t<s.length;t++)s[t].makenormal().dist(i)>ot&&(s[t]=s[t].smul(-1));s.sort(((t,e)=>t.a-e.a)),t[h]=s}this.moveplanesets=t,this.moveplanenormals=e;const s=t.map((t=>t.length));this.options.verbosity>0&&console.log(`# Move plane sets: ${s}`);const i=[];for(let h=0;h<t.length;h++)i.push([]);for(const h of this.rotations){if(Math.abs(Math.abs(h.a)-1)<ot)continue;const s=h.makenormal();for(let n=0;n<t.length;n++)if(s.sameplane(e[n])){i[n].push(h);break}}this.moverotations=i;for(let h=0;h<i.length;h++){const t=i[h],s=t[0].makenormal();for(let e=0;e<t.length;e++)s.dist(t[e].makenormal())>ot&&(t[e]=t[e].smul(-1));t.sort(((t,e)=>t.angle()-e.angle())),i[h][0].dot(e[h])<0&&t.reverse()}const n=i.map((t=>1+t.length));this.movesetorders=n;const o=[];let r="?";for(let k=0;k<t.length;k++){const s=e[k];let i=null,n=null;for(const t of this.geonormals){const e=s.dot(t[0]);Math.abs(e-1)<ot?(n=[t[1],t[2]],r=t[2]):Math.abs(e+1)<ot&&(i=[t[1],t[2]],r=t[2])}if(null===n||null===i)throw new Error("Saw positive or negative sides as null");o.push([n[0],n[1],i[0],i[1],1+t[k].length]),"NxNxNCubeMapper"===this.addNotationMapper&&"f"===r&&(this.notationMapper=new c(1+t[k].length),this.addNotationMapper=""),"SkewbMapper"===this.addNotationMapper&&1===t[0].length&&(this.notationMapper=new D(this.swizzler),this.addNotationMapper=""),"PyraminxOrTetraminxMapper"===this.addNotationMapper&&(2===t[0].length&&.333333333333333===t[0][0].a&&1.66666666666667===t[0][1].a?(this.notationMapper=new g(this.swizzler),this.addNotationMapper=""):(this.notationMapper=new v(this.swizzler),this.addNotationMapper="")),"MegaminxMapper"===this.addNotationMapper&&"f"===r&&(1+t[k].length===3&&(this.notationMapper=new l(this.notationMapper)),this.addNotationMapper=""),"FTOMapper"===this.addNotationMapper&&"f"===r&&(1+t[k].length===3&&(this.notationMapper=new h(this.notationMapper,this.swizzler)),this.addNotationMapper="")}this.movesetgeos=o;const a=new Map,f=this.faces;for(let h=0;h<f.length;h++){const t=f[h],e=this.keyface(t);if(a.get(e)){const t=a.get(e);if(t.push(h),t.length===this.baseFaceCount){this.options.verbosity>0&&console.log("# Splitting core.");for(let s=0;s<t.length;s++){const i=`${e} ${s}`;a.set(i,[t[s]])}}}else a.set(e,[h])}this.facelisthash=a,this.options.verbosity>0&&console.log(`# Cubies: ${a.size}`);const u=[],m=[],p=[];for(const h of a.values())if(h.length!==this.baseFaceCount){if(h.length>1){const t=h.map((t=>f[t].centermass())),e=Q(t);for(let o=0;h.length>2;o++){let s=!1;for(let i=0;i<h.length;i++){const n=(i+1)%h.length;if(e.dot(t[i].cross(t[n]))<0){const e=t[i];t[i]=t[n],t[n]=e;const o=h[i];h[i]=h[n],h[n]=o,s=!0}}if(!s)break;if(o>1e3)throw new Error("Bad epsilon math; too close to border")}let s=0;for(const o of h)s|=1<<Math.floor(o/this.stickersperface);const i=this.markedface[s];let n=-1;for(let o=0;o<h.length;o++)Math.floor(h[o]/this.stickersperface)===i&&(n=o);if(n<0)throw new Error("Could not find marked face in list");if(0!==n){const t=h.slice();for(let e=0;e<h.length;e++)h[e]=t[(n+e)%h.length]}}for(let t=0;t<h.length;t++){const e=h[t];m[e]=u.length,p[e]=t}u.push(h)}this.cubies=u,this.facetocubie=m,this.facetoord=p;const d=["?","CENTERS","EDGES","CORNERS","C4RNER","C5RNER"],b=[],w=[0,0,0,0,0,0],y=[],M=[];let L=0;const B=[],x=[],F=[],R=[],z=t=>u[t].map((t=>this.getfaceindex(t))).join(" "),U=[];for(let h=0;h<u.length;h++){const t=u[h];if(0===t.length)continue;if(M[h])continue;const e={};let s=0;F.push(0),U.push([]);const n=t.length,o=w[n]++;let r=d[n];void 0!==r&&n!==this.baseFaceCount||(r="CORE"),r+=0===o?"":o+1,b[L]=r,y[L]=n;const a=[h];let l=0;for(M[h]=!0;l<a.length;){const n=a[l++],o=z(n);if((t.length>1||void 0===e[o])&&(e[o]=s++),R[n]=e[o],B[n]=L,U[L].push(n),x[n]=F[L]++,a.length<this.rotations.length){const t=this.facecentermass[u[n][0]];for(const e of i){const s=this.facetocubie[this.findface(t.rotatepoint(e[0]))];M[s]||(a.push(s),M[s]=!0)}}}L++}if(this.setReidOrder&&4<=this.stickersperface&&this.stickersperface<=9){const t=[["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],["UFR","URB","UBL","ULF","DRF","DFL","DLB","DBR"],["U","L","F","R","B","D"]],e={};for(const s of t)for(let t=0;t<s.length;t++){let i=0;for(let e=0;e<s[t].length;e++)i|=1<<s[t].charCodeAt(e)-65;e[i]=t}for(const s of U)for(const t of s){let s=0;for(const e of u[t])s|=1<<this.facenames[this.getfaceindex(e)][1].charCodeAt(0)-65;x[t]=e[s]}}if(this.cubiesetnums=B,this.cubieordnums=x,this.cubiesetnames=b,this.cubieords=F,this.orbitoris=y,this.cubievaluemap=R,this.cubiesetcubies=U,null!==this.options.fixedPieceType){for(let t=0;t<u.length;t++)if("v"===this.options.fixedPieceType&&u[t].length>2||"e"===this.options.fixedPieceType&&2===u[t].length||"f"===this.options.fixedPieceType&&1===u[t].length){this.fixedCubie=t;break}if(this.fixedCubie<0)throw new Error(`Could not find a cubie of type ${this.options.fixedPieceType} to fix.`)}this.options.verbosity>0&&console.log(`# Cubie orbit sizes ${F}`)}unswizzle(t){const e=this.notationMapper.notationToInternal(t);return null===e?null:e.modified({family:this.swizzler.unswizzle(e.family)})}stringToBlockMove(t){const e=t.match(/^(([0-9]+)-)?([0-9]+)?([^0-9]+)([0-9]+'?)?$/);if(null===e)throw new Error(`Bad move passed ${t}`);const s=e[4];let n,o;if(void 0!==e[2]){if(void 0===e[3])throw new Error("Missing second number in range");n=parseInt(e[2],10)}void 0!==e[3]&&(o=parseInt(e[3],10));let r="1",h=1;return void 0!==e[5]&&(r=e[5],"'"===r[0]&&(r=`-${r.substring(1)}`),h=parseInt(r,10)),new i.yU(new i.VL(s,o,n),h)}parseMove(t){const e=this.notationMapper.notationToInternal(t);if(null===e)throw new Error(`Bad move ${t.family}`);let s,i=(t=e).family,n=!1;if(i.endsWith("v")&&i[0]<="Z"){if(void 0!==t.innerLayer||void 0!==t.outerLayer)throw new Error("Cannot use a prefix with full cube rotations");i=i.slice(0,-1),n=!0}i.endsWith("w")&&i[0]<="Z"&&(i=i.slice(0,-1).toLowerCase());let o=-1;const r=this.swizzler.unswizzle(i);let h=!1;for(let c=0;c<this.movesetgeos.length;c++){const t=this.movesetgeos[c];r===t[0]&&(h=!0,s=t,o=c),r===t[2]&&(h=!1,s=t,o=c)}let a=1,l=1;if(i.toUpperCase()!==i&&(l=2),void 0===s)throw new Error(`Bad grip in move ${t.family}`);if(void 0!==t.outerLayer&&(a=t.outerLayer),void 0!==t.innerLayer&&(void 0===t.outerLayer?(l=t.innerLayer,a=i<="Z"?l:1):l=t.innerLayer),a--,l--,n&&(a=0,l=this.moveplanesets[o].length),a<0||a>this.moveplanesets[o].length||l<0||l>this.moveplanesets[o].length)throw new Error(`Bad slice spec ${a} ${l} vs ${this.moveplanesets[o].length}`);if(0===a&&l===this.moveplanesets[o].length&&!n)throw new Error("! full puzzle rotations must be specified with v suffix.");return[void 0,o,a,l,h,t.amount]}parsemove(t){const e=this.parseMove(this.stringToBlockMove(t));return e[0]=t,e}genperms(){if(this.cmovesbyslice.length>0)return;const t=[];if(this.options.orientCenters)for(let e=0;e<this.cubies.length;e++)if(1===this.cubies[e].length){const t=this.cubies[e][0],s=this.getfaceindex(t),i=this.basefaces[s].centermass();if(i.dist(this.facecentermass[t])<ot){const n=1<<s|1<<this.baseFaceCount,o=this.markedface[n],r=this.baseplanes[o].makenormal();let h=-1,a=-1;for(let e=0;e<this.faces[t].length;e++){const s=this.faces[t].get(e),n=r.dot(s.sub(i));n>h&&(h=n,a=e)}const l=(a+1)%this.faces[t].length;if(Math.abs(r.dot(this.faces[t].get(l).sub(i))-h)<ot&&(a=l),0!==a){const e=[];for(let s=0;s<this.faces[t].length;s++)e.push(this.faces[t].get((s+a)%this.faces[t].length));this.faces[t]=new it(e)}const c=this.basefaces[s].length;for(let t=1;t<c;t++)this.cubies[e].push(this.cubies[e][t-1]);this.duplicatedFaces[t]=c,this.duplicatedCubies[e]=c,this.orbitoris[this.cubiesetnums[e]]=c}}for(let e=0;e<this.moveplanesets.length;e++){const s=this.moveplanesets[e],i=[],n=[s.length+1,0];let o=1;for(;2*o<=s.length;)o*=2;for(let t=0;t<this.faces.length;t++){let e=0;if(s.length>0){const i=this.facecentermass[t].dot(s[0]);for(let t=o;t>0;t>>=1)e+t<=s.length&&i>s[e+t-1].a&&(e+=t);e=s.length-e}for(i.push(e);n.length<=e;)n.push(0);n[e]++}const r=new Array(n.length);for(let t=0;t<n.length;t++)r[t]=[];const h=[];for(let t=0;t<this.faces.length;t++){if(i[t]<0)continue;const s=[this.facetocubie[t],this.facetoord[t]];let n=this.facecentermass[t];const o=n;let a=t;const l=i[a];for(;;){i[a]=-1;const t=n.rotatepoint(this.moverotations[e][0]);if(t.dist(o)<ot)break;a=this.findface(t),s.push(this.facetocubie[a],this.facetoord[a]),n=t}if(s.length>2&&this.options.orientCenters&&(1===this.cubies[s[0]].length||this.duplicatedCubies[s[0]]>1)&&this.facecentermass[t].dist(this.basefaces[this.getfaceindex(t)].centermass())<ot){let t=this.faces[this.cubies[s[0]][0]];for(let i=0;i<s.length;i+=2){const n=this.faces[this.cubies[s[i]][0]];let o=-1;for(let e=0;e<t.length;e++)if(n.get(e).dist(t.get(0))<ot){o=e;break}if(o<0)throw new Error("Couldn't find rotation of center faces; ignoring for now.");s[i+1]=o,t=t.rotate(this.moverotations[e][0])}}if(2===s.length&&this.options.orientCenters){const i=this.facecentermass[t].dot(this.moveplanenormals[e]);for(let t=1;t<this.movesetorders[e];t++)i>0?s.push(s[0],t):s.push(s[0],(this.movesetorders[e]-t)%this.movesetorders[e])}if(s.length>2&&!h[s[0]]){if(s.length!==2*this.movesetorders[e])throw new Error("Bad length in perm gen");for(const t of s)r[l].push(t)}for(let t=0;t<s.length;t+=2)h[s[t]]=!0}for(let t=0;t<r.length;t++)r[t]=r[t].slice();t.push(r)}if(this.cmovesbyslice=t,this.options.moveList){const t=[];for(const e of this.options.moveList)t.push(this.parsemove(e));this.parsedmovelist=t}this.facelisthash.clear(),this.facecentermass=[]}getboundarygeometry(){return{baseplanes:this.baseplanes,facenames:this.facenames,faceplanes:this.faceplanes,vertexnames:this.vertexnames,edgenames:this.edgenames,geonormals:this.geonormals}}getmovesets(t){const e=this.moveplanesets[t].length;let s=[];if(void 0!==this.parsedmovelist)for(const i of this.parsedmovelist)i[1]===t&&(i[4]?s.push([i[2],i[3]]):s.push([e-i[3],e-i[2]]),s.push(i[5]));else if(this.options.vertexMoves&&!this.options.allMoves){const i=this.movesetgeos[t];if(i[1]!==i[3])for(let t=0;t<e;t++)"v"!==i[1]?(this.options.outerBlockMoves?s.push([t+1,e]):s.push([t+1]),s.push(1)):(this.options.outerBlockMoves?s.push([0,t]):s.push([t,t]),s.push(1))}else for(let i=0;i<=e;i++)(this.options.allMoves||i+i!==e)&&(this.options.outerBlockMoves?i+i>e?s.push([i,e]):s.push([0,i]):s.push([i,i]),s.push(1));if(this.fixedCubie>=0){const i=this.keyface3(this.faces[this.cubies[this.fixedCubie][0]])[t],n=[];for(let t=0;t<s.length;t+=2){let o=s[t];if(i>=o[0]&&i<=o[1])if(0===o[0])o=[o[1]+1,e];else{if(e!==o[1])throw Error("fixed cubie option would disconnect move");o=[0,o[0]-1]}let r=!1;for(let e=0;e<n.length;e+=2)if(n[e][0]===o[0]&&n[e][1]===o[1]&&n[e+1]===s[t+1]){r=!0;break}r||(n.push(o),n.push(s[t+1]))}s=n}return s}graybyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),1===e&&(this.options.grayCenters||!this.options.includeCenterOrbits)||2===e&&(this.options.grayEdges||!this.options.includeEdgeOrbits)||e>2&&(this.options.grayCorners||!this.options.includeCornerOrbits)}skipbyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),1===e&&!this.options.includeCenterOrbits||2===e&&!this.options.includeEdgeOrbits||e>2&&!this.options.includeCornerOrbits}skipcubie(t){return this.skipbyori(t)}header(t){return`${t+"PuzzleGeometry 0.1 Copyright 2018 Tomas Rokicki."}\n${t}\n`}writegap(){const t=this.getOrbitsDef(!1),e=[],s=[];for(let n=0;n<t.moveops.length;n++){let i=`M_${T(this.notationMapper,t.movenames[n])}`,o=!1;"'"===i[i.length-1]&&(i=i.substring(0,i.length-1),o=!0),s.push(i),o?e.push(`${i}:=${t.moveops[n].toPerm().inv().toGap()};`):e.push(`${i}:=${t.moveops[n].toPerm().toGap()};`)}e.push("Gen:=["),e.push(s.join(",")),e.push("];");const i=t.solved.identicalPieces();return e.push(`ip:=[${i.map((t=>`[${t.map((t=>t+1)).join(",")}]`)).join(",")}];`),e.push("# Size(Group(Gen));"),e.push("# Size(Stabilizer(Group(Gen), ip, OnTuplesSets));"),e.push(""),this.header("# ")+e.join("\n")}writemathematica(){const t=this.getOrbitsDef(!1),e=[],s=[];e.push(`(* ${this.header("").trim()} *)`);for(let i=0;i<t.moveops.length;i++){let n=`m${T(this.notationMapper,t.movenames[i])}`,o=!1;"'"===n[n.length-1]&&(n=n.substring(0,n.length-1),o=!0),s.push(n),o?e.push(`${n}=${t.moveops[i].toPerm().inv().toMathematica()};`):e.push(`${n}=${t.moveops[i].toPerm().toMathematica()};`)}return e.push(`gen={${s.join(",")}};`),e.join("\n")}writeksolve(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"PuzzleGeometryPuzzle";const e=this.getOrbitsDef(!1);return this.header("# ")+e.toKsolve(t,this.notationMapper).join("\n")}getKPuzzleDefinition(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const s=this.getOrbitsDef(t,e).toKPuzzleDefinition(e);if(s.experimentalPuzzleDescription=this.puzzleDescription,!s)throw new Error("Missing definition!");return s}getMoveFromBits(t,e,s,i,n,o){const r=[],h=[],a=[];for(const f of this.cubieords)h.push(O(f)),a.push($(f));for(let f=t[0];f<=t[1];f++){const t=i[f];for(let e=0;e<t.length;e+=2*o){const i=t.slice(e,e+2*o),n=this.cubiesetnums[i[0]];for(let t=0;t<i.length;t+=2)i[t]=this.cubieordnums[i[t]];let r=2,l=3;s&&(r=i.length-2,l=i.length-1),h[n]===O(this.cubieords[n])&&(h[n]=h[n].slice(),this.orbitoris[n]>1&&!this.options.fixedOrientation&&(a[n]=a[n].slice()));for(let t=0;t<i.length;t+=2)h[n][i[(t+r)%i.length]]=i[t],this.orbitoris[n]>1&&!this.options.fixedOrientation&&(a[n][i[t]]=(i[(t+l)%i.length]-i[(t+1)%i.length]+2*this.orbitoris[n])%this.orbitoris[n])}}let l=new j(O(24),$(24),1);for(let f=0;f<this.cubiesetnames.length;f++)if(!n||n[f])if(1===this.orbitoris[f]||this.options.fixedOrientation)h[f]===O(l.perm.length)?(h[f]!==l.perm&&(l=new j(h[f],a[f],1)),r.push(l)):r.push(new j(h[f],a[f],1));else{const t=new Array(a[f].length);for(let e=0;e<h[f].length;e++)t[e]=a[f][h[f][e]];r.push(new j(h[f],t,this.orbitoris[f]))}let c=new K(r);return 1!==e&&(c=c.mulScalar(e)),c}omitSet(t){for(const e of this.options.excludeOrbits)if(e===t)return!0;return!1}diffmvsets(t,e,s,i){for(let n=0;n<t.length;n+=2){let o=!1;for(let r=0;!o&&r<e.length;r+=2)i?t[n][0]+e[r][1]===s&&t[n][1]+e[r][0]===s&&t[n+1]===e[r+1]&&(o=!0):t[n][0]===e[r][0]&&t[n][1]===e[r][1]&&t[n+1]===e[r+1]&&(o=!0);if(!o)return!0}return!1}getOrbitsDef(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const s=[];if(t)for(let p=0;p<this.cubiesetnames.length;p++)s.push(1);const i=[],n=[],o=[],r=[];for(let p=0;p<this.moveplanesets.length;p++){const t=this.getmovesets(p);o.push(t),this.options.addRotations?r.push(1):r.push(0)}const h=[];for(let p=0;p<this.moveplanesets.length;p++){const t=this.moveplanesets[p].length;let e=!1;const s=o[p];for(let i=0;i<s.length;i+=2)0===s[i][0]&&s[i][1]===t&&(e=!0);h[p]=e}if(this.options.addRotations&&(this.options.moveList||null!==this.options.fixedPieceType)){for(let t=0;t<this.moverotations.length;t++)r[t]=0;for(let t=0;t<this.moveplanesets.length;t++)if(h[t])r[t]=3;else for(let e=0;e<this.moverotations.length;e++){let s=this.moveplanenormals[t];for(let i=1;2*i<=this.movesetorders[e];i++){if(s=s.rotatepoint(this.moverotations[e][0]),r[e]&i)continue;let n=-1,h=!1;for(let t=0;t<this.moveplanenormals.length;t++){if(s.dist(this.moveplanenormals[t])<ot){n=t;break}if(s.dist(this.moveplanenormals[t].smul(-1))<ot){n=t,h=!0;break}}if(n<0)throw new Error("Could not find rotation");const a=o[n];(a.length!==o[t].length||this.moveplanesets[t].length!==this.moveplanesets[n].length||this.diffmvsets(a,o[t],this.moveplanesets[n].length,h))&&(r[e]|=i)}}for(let t=0;t<this.moverotations.length;t++)if(0===r[t])r[t]=1;else if(1===r[t])this.movesetorders[t]>3?r[t]=2:r[t]=0;else{if(3!==r[t])throw new Error("Impossible addrot val");r[t]=0}}for(let p=0;p<this.moveplanesets.length;p++)0===r[p]||h[p]||(o[p].push([0,this.moveplanesets[p].length]),o[p].push(r[p]));for(let p=0;p<this.moveplanesets.length;p++){const t=o[p],e=this.movesetorders[p];for(let s=0;s<t.length;s+=2)for(let e=0;e<s;e+=2)if(t[s][0]===t[e][0]&&t[s][1]===t[e][1])throw new Error("Redundant moves in moveset.");const i=[];for(let s=0;s<t.length;s+=2)for(let e=t[s][0];e<=t[s][1];e++)i[e]=1;const n=this.cmovesbyslice[p];for(let o=0;o<n.length;o++){if(1!==i[o])continue;const t=n[o];for(let i=0;i<t.length;i+=2*e){if(this.skipcubie(t[i]))continue;s[this.cubiesetnums[t[i]]]=1}}}for(let p=0;p<this.cubiesetnames.length;p++)s[p]&&(this.omitSet(this.cubiesetnames[p])?s[p]=0:(i.push(this.cubiesetnames[p]),n.push(new S(this.cubieords[p],this.options.fixedOrientation?1:this.orbitoris[p]))));const a=[];for(let p=0;p<this.cubiesetnames.length;p++){if(!s[p])continue;if(this.omitSet(this.cubiesetnames[p]))continue;const e=[],i=[];for(let s=0;s<this.cubieords[p];s++){if(t)e.push(s);else{const t=this.cubiesetcubies[p][s];e.push(this.cubievaluemap[t])}i.push(0)}a.push(new j(e,i,this.options.fixedOrientation?1:this.orbitoris[p]))}const l=[],c=[],f=[],u=[];if(e)for(let p=0;p<this.moveplanesets.length;p++){const t=this.moveplanesets[p].length,e=o[p],i=this.movesetgeos[p];for(let n=0;n<e.length;n+=2){const o=e[n];let r,h=!1;if(void 0!==this.parsedmovelist)for(const e of this.parsedmovelist){if(e[1]!==p)continue;let s=[];s=e[4]?[e[2],e[3]]:[t-e[3],t-e[2]],s[0]===o[0]&&s[1]===o[1]&&(r=e[0],h=!e[4])}if(r)l.push(r),c.push(!0);else{const s=dt(i,o,t);h=s[1];const r=s[0];1===e[n+1]?l.push(r):l.push(r+e[n+1]),c.push(!1)}u.push(0===o[0]&&o[1]===t);const a=this.getMoveFromBits(o,e[n+1],h,this.cmovesbyslice[p],s,this.movesetorders[p]);f.push(a)}}let m=new V(i,n,new q(a),l,f,u,c);return this.options.optimizeOrbits&&(m=m.optimize()),0!==this.options.scrambleAmount&&m.scramble(this.options.scrambleAmount),m}getScramble(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const e=this.getOrbitsDef(!1);return e.toKTransformationData(e.getScrambleTransformation(t))}getMovesAsPerms(){return this.getOrbitsDef(!1).moveops.map((t=>t.toPerm()))}showcanon(t){!function(t,e){const s=t.moveops.length;if(s>30)throw new Error("Canon info too big for bitmask");const i=[],n=[];for(let r=0;r<s;r++){const e=t.moveops[r];i.push(e.order());let o=0;for(let i=0;i<s;i++){if(i===r)continue;const s=t.moveops[i];e.mul(s).equal(s.mul(e))&&(o|=1<<i)}n.push(o)}let o={0:1};for(let r=0;r<100;r++){let t=0;const s={};let h=0;for(const e in o){const r=+e,a=o[r];t+=a,h++;for(let t=0;t<i.length;t++)if(0===(r>>t&1)&&0===(r&n[t]&(1<<t)-1)){const e=r&n[t]|1<<t;void 0===s[e]&&(s[e]=0),s[e]+=(i[t]-1)*a}}e(`${r}: canonseq ${t} states ${h}`),o=s}}(this.getOrbitsDef(!1),t)}getsolved(){const t=[];for(let e=0;e<this.baseFaceCount;e++)for(let s=0;s<this.stickersperface;s++)t.push(e);return new P(t)}getOrientationRotation(t){const[e,[s,i,n]]=t[0],o=new Z(0,s,-i,n),[r,[h,a,l]]=t[1],c=new Z(0,h,-a,l);let f=null,u=null;const m=this.swizzler.unswizzle(e),p=this.swizzler.unswizzle(r);for(const g of this.geonormals)m===g[1]&&(f=g[0]),p===g[1]&&(u=g[0]);if(!f)throw new Error(`Could not find feature ${e}`);if(!u)throw new Error(`Could not find feature ${r}`);const d=f.pointrotation(o);return u.rotatepoint(d).unproject(o).pointrotation(c.unproject(o)).mul(d)}getInitial3DRotation(){const t=this.baseFaceCount;let e=null;if(this.options.puzzleOrientation?e=this.options.puzzleOrientation:this.options.puzzleOrientations&&(e=this.options.puzzleOrientations[t]),e||(e={4:[["FLR",[0,1,0]],["F",[0,0,1]]],6:[["U",[0,1,0]],["F",[0,0,1]]],8:[["U",[0,1,0]],["F",[0,0,1]]],12:[["U",[0,1,0]],["F",[0,0,1]]],20:[["GUQMJ",[0,1,0]],["F",[0,0,1]]]}[t]),!e)throw new Error("No default orientation?");return this.getOrientationRotation(e)}generate2dmapping(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:800,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:500,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.92;function o(t,e){let s=t[1][0]-t[0][0],i=t[1][1]-t[0][1];const n=2*Math.PI/e,o=Math.cos(n),r=Math.sin(n);for(let h=2;h<e;h++){const e=s*o+i*r;i=i*o-s*r,s=e,t.push([t[h-1][0]+s,t[h-1][1]+i])}}t-=2*s,e-=2*s,this.genperms();const r=this.getboundarygeometry().facenames[0][0].length,h=this.net;if(null===h)throw new Error("No net?");const a={};let l=0,c=0,f=1,u=0;a[h[0][0]]=[[1,0],[0,0]],o(a[h[0][0]],r);for(const F of h){const t=F[0];if(!a[t])throw new Error("Bad edge description; first edge not connected.");for(let e=1;e<F.length;e++){const s=F[e];""===s||a[s]||(a[s]=[a[t][e%r],a[t][(e+r-1)%r]],o(a[s],r))}}for(const F in a){const t=a[F];for(const e of t)l=Math.min(l,e[0]),f=Math.max(f,e[0]),c=Math.min(c,e[1]),u=Math.max(u,e[1])}const m=Math.min(t/(f-l),e/(u-c)),p=.5*(t-m*(f+l)),d=.5*(e-m*(u+c)),g={},v=this.getboundarygeometry(),b={},w=[[m+p,d],[p,d]];b[h[0][0]]=w,o(b[h[0][0]],r),g[this.facenames[0][1]]=this.project2d(0,0,[new Z(0,w[0][0],w[0][1],0),new Z(0,w[1][0],w[1][1],0)]);const y=[];y[0]=0;for(const F of h){const t=F[0];if(!b[t])throw new Error("Bad edge description; first edge not connected.");let e=-1;for(let i=0;i<v.facenames.length;i++)if(t===v.facenames[i][1]){e=i;break}if(e<0)throw new Error(`Could not find first face name ${t}`);const s=v.facenames[e][0];for(let i=1;i<F.length;i++){const n=F[i];if(""===n||b[n])continue;b[n]=[b[t][i%r],b[t][(i+r-1)%r]],o(b[n],r);const h=y[e],a=s[(h+i)%r].sum(s[(h+i+r-1)%r]).smul(.5),l=ht(v.edgenames,a),c=gt(v.edgenames[l][1],this.facenames),f=c[t===c[0]?1:0];let u=-1;for(let t=0;t<v.facenames.length;t++)if(f===v.facenames[t][1]){u=t;break}if(u<0)throw new Error("Could not find second face name");const m=v.facenames[u][0];for(let e=0;e<m.length;e++){if(m[e].sum(m[(e+1)%r]).smul(.5).dist(a)<=ot){const s=b[t][(i+r-1)%r],n=b[t][i%r];y[u]=e,g[f]=this.project2d(u,e,[new Z(0,n[0],n[1],0),new Z(0,s[0],s[1],0)]);break}}}}let M=0,L=0;const B=this.getInitial3DRotation();for(let F of this.faces){i&&(F=F.rotate(B));for(let t=0;t<F.length;t++)M=Math.max(M,Math.abs(F.get(t).b)),L=Math.max(L,Math.abs(F.get(t).c))}const x=Math.min(e/L/2,(t-s)/M/4);return(o,r)=>{if(i){r=r.rotatepoint(B);const i=.5*s+.25*t,n=this.baseplanes[o].rotateplane(B).d<0?1:-1;return[s+.5*t+n*(i-r.b*x),s+.5*e+r.c*x]}{const t=g[this.facenames[o][1]];return[s+n*r.dot(t[0])+t[2].b,s+e-n*r.dot(t[1])-t[2].c]}}}generatesvg(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:800,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:500,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const n=this.generate2dmapping(t,e,s,i);function o(t,e,s){return`<polygon id="${t}" class="sticker" style="fill: ${s}" points="${e.map((t=>`${t[0]} ${t[1]}`)).join(" ")}"/>\n`}const r=this.getsolved(),h=[],a=[];for(let c=0;c<this.baseFaceCount;c++)h[c]=this.colors[this.facenames[c][1]];for(let c=0;c<this.faces.length;c++){const t=this.faces[c],e=Math.floor(c/this.stickersperface),s=[];for(let i=0;i<t.length;i++)s.push(n(e,t.get(i)));a.push(s)}const l=[];for(let c=0;c<this.baseFaceCount;c++){l.push("<g>"),l.push(`<title>${this.facenames[c][1]}</title>\n`);for(let t=0;t<this.stickersperface;t++){const e=c*this.stickersperface+t,s=this.facetocubie[e],i=this.facetoord[e],n=this.cubiesetnums[s],f=this.cubieordnums[s],u=this.graybyori(s)?"#808080":h[r.p[e]];let m=`${this.cubiesetnames[n]}-l${f}-o${i}`;if(l.push(o(m,a[e],u)),this.duplicatedFaces[e])for(let t=1;t<this.duplicatedFaces[e];t++)m=`${this.cubiesetnames[n]}-l${f}-o${t}`,l.push(o(m,a[e],u))}l.push("</g>")}return`<svg id="svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 800 500">\n<style type="text/css"><![CDATA[.sticker { stroke: #000000; stroke-width: 1px; }]]></style>\n${l.join("")}</svg>`}get3d(t){const e=[],s=this.getInitial3DRotation(),n=[],o=.52*this.basefaces[0].get(0).len();for(let i=0;i<this.basefaces.length;i++){const t=this.basefaces[i].rotate(s),e=this.facenames[i][1];n.push({coords:bt(t,o),name:e})}for(let i=0;i<this.faces.length;i++){const n=Math.floor(i/this.stickersperface),r=this.facetocubie[i],h=this.facetoord[i],a=this.cubiesetnums[r],l=this.cubieordnums[r];let c=this.graybyori(r)?t?.darkIgnoredOrbits?"#222222":"#808080":this.colors[this.facenames[n][1]];t?.stickerColors&&(c=t.stickerColors[i]);const f=this.faces[i].rotate(s);e.push({coords:bt(f,o),color:c,orbit:this.cubiesetnames[a],ord:l,ori:h,face:n});let u=f;if(this.duplicatedFaces[i]){const t=u.length/this.duplicatedFaces[i];for(let s=1;s<this.duplicatedFaces[i];s++){for(let e=0;e<t;e++)u=u.rotateforward();e.push({coords:bt(u,o),color:c,orbit:this.cubiesetnames[a],ord:l,ori:s,face:n,isDup:!0})}}}const r=[];for(let l=0;l<this.movesetgeos.length;l++){const t=this.movesetgeos[l],e=this.movesetorders[l];for(const n of this.geonormals)t[0]===n[1]&&t[1]===n[2]&&(r.push({coordinates:vt(n[0].rotatepoint(s),1),quantumMove:new i.yU(t[0]),order:e}),r.push({coordinates:vt(n[0].rotatepoint(s).smul(-1),1),quantumMove:new i.yU(t[2]),order:e}))}const h=this.generate2dmapping(2880,2160,0,!1,1),a=(()=>{const t=s.invrot();return(e,s)=>{let i=new Z(0,s[0]*o,-s[1]*o,s[2]*o);i=i.rotatepoint(t);const n=h(e,i);return n[0]/=2880,n[1]=1-n[1]/2160,n}})().bind(this);return{stickers:e,faces:n,axis:r,unswizzle:this.unswizzle.bind(this),notationMapper:this.notationMapper,textureMapper:{getuv:a}}}getGeoNormal(t){const e=this.getInitial3DRotation(),s=this.swizzler.unswizzle(t);for(const i of this.geonormals)if(s===i[1]){const t=vt(i[0].rotatepoint(e),1);return Math.abs(t[0])<ot&&Math.abs(t[2])<ot&&(t[0]=0,t[2]=1e-6),t}}getfaceindex(t){const e=this.stickersperface;return Math.floor(t/e)}textForTwizzleExplorer(){return`Faces ${this.baseplanerot.length}\nStickers per face ${this.stickersperface}\nShort edge ${this.shortedge}\nCubies ${this.cubies.length}\nEdge distance ${this.edgedistance}\nVertex distance ${this.vertexdistance}`}writeSchreierSims(t){const e=this.getOrbitsDef(!1).reassemblySize();t(`Reassembly size is ${e}`);t(`Ratio is ${e/st(this.getMovesAsPerms(),t)}`)}},yt=class{constructor(t,e){(0,n.Mu)(this,"orbitNames"),this.pg=t,this.orbitNames=e.orbitnames}lookupMove(t){const e=this.pg.parseMove(t);if(this.pg.parsedmovelist){let t=!1;for(const s of this.pg.parsedmovelist)s[1]===e[1]&&s[2]===e[2]&&s[3]===e[3]&&s[4]===e[4]&&(t=!0);if(!t)return null}let s=[e[2],e[3]];if(!e[4]){const t=this.pg.moveplanesets[e[1]].length;s=[t-e[3],t-e[2]]}const i=this.pg.getMoveFromBits(s,e[5],!e[4],this.pg.cmovesbyslice[e[1]],void 0,this.pg.movesetorders[e[1]]);return V.transformToKTransformationData(this.orbitNames,i)}remapKPuzzleDefinition(t){return function(t,e){const s={...t,moves:{}};for(const[n,o]of Object.entries(t.moves)){let t=n,r="";["v","w"].includes(n.at(-1))&&(t=n.slice(0,-1),r=n.slice(-1));const h=e.notationToExternal(i.yU.fromString(t));if(!h)continue;const a=h+r;if(!a)throw new Error(`Missing external move name for: ${n.toString()}`);s.moves[a.toString()]=o}return s}(t,this.pg.notationMapper)}}}}]);
//# sourceMappingURL=938.78f59987.chunk.js.map