{"version":3,"file":"static/js/909.4d15ee4d.chunk.js","mappings":"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","sources":["../node_modules/scramble-display/dist/esm/twisty-dynamic-3d-UD3G3HVY-QYVQLU3M.js"],"sourcesContent":["import {\n  BackSide,\n  BoxGeometry,\n  BufferAttribute,\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Euler,\n  FrontSide,\n  Group,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Quaternion,\n  TAU,\n  THREEJS,\n  TextureLoader,\n  Vector2,\n  Vector3,\n  cube3x3x3,\n  getFaceletStickeringMask,\n  haveStartedSharingRenderers,\n  hintFaceletStyles,\n  three_module_exports\n} from \"./chunk-SB6GK4QQ.js\";\nimport {\n  Move\n} from \"./chunk-NCGRY2AA.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet,\n  __publicField\n} from \"./chunk-YPFRV6UN.js\";\n\n// node_modules/cubing/dist/lib/cubing/chunks/twisty-dynamic-3d-UD3G3HVY.js\nfunction smootherStep(x) {\n  return x * x * x * (10 - x * (15 - 6 * x));\n}\nvar svgLoader = new TextureLoader();\nvar ignoredMaterial = new MeshBasicMaterial({\n  color: new Color(6710886).convertLinearToSRGB()\n});\nvar ignoredMaterialHint = new MeshBasicMaterial({\n  color: new Color(13421772).convertLinearToSRGB(),\n  side: BackSide,\n  transparent: true,\n  opacity: 0.75\n});\nvar invisibleMaterial = new MeshBasicMaterial({\n  visible: false\n});\nvar orientedMaterial = new MeshBasicMaterial({\n  color: 4513228\n});\nvar orientedMaterialHint = new MeshBasicMaterial({\n  color: 4513228,\n  side: BackSide,\n  transparent: true,\n  opacity: 0.5\n});\nvar experimentalOriented2Material = new MeshBasicMaterial({\n  color: 16776618\n});\nvar experimentalOriented2MaterialHint = new MeshBasicMaterial({\n  color: 16775545,\n  side: BackSide,\n  transparent: true,\n  opacity: 0.5\n});\nvar mysteryMaterial = new MeshBasicMaterial({\n  color: 15911883\n});\nvar mysterMaterialHint = new MeshBasicMaterial({\n  color: 15911883,\n  side: BackSide,\n  transparent: true,\n  opacity: 0.5\n});\nvar AxisInfo = class {\n  constructor(vector, fromZ, color, dimColor, hintOpacityScale, options) {\n    __publicField(this, \"stickerMaterial\");\n    __publicField(this, \"hintStickerMaterial\");\n    this.vector = vector;\n    this.fromZ = fromZ;\n    this.color = color;\n    this.dimColor = dimColor;\n    this.hintOpacityScale = hintOpacityScale;\n    const colorLinearSRGB = new Color(color).convertLinearToSRGB();\n    const dimColorLinearSRGB = new Color(dimColor).convertLinearToSRGB();\n    this.stickerMaterial = {\n      regular: new MeshBasicMaterial({\n        color: colorLinearSRGB,\n        side: FrontSide\n        // TODO: set to `DoubleSide` when hint facelets are disabled.\n      }),\n      dim: new MeshBasicMaterial({\n        color: dimColorLinearSRGB,\n        side: FrontSide\n        // TODO: set to `DoubleSide` when hint facelets are disabled.\n      }),\n      oriented: orientedMaterial,\n      experimentalOriented2: experimentalOriented2Material,\n      ignored: ignoredMaterial,\n      invisible: invisibleMaterial,\n      mystery: mysteryMaterial\n    };\n    this.hintStickerMaterial = {\n      regular: new MeshBasicMaterial({\n        color: new Color(options?.hintColor ?? color).convertLinearToSRGB(),\n        side: BackSide,\n        transparent: true,\n        opacity: 0.5 * hintOpacityScale\n      }),\n      dim: new MeshBasicMaterial({\n        color: new Color(\n          options?.hintDimColor ?? dimColor\n        ).convertLinearToSRGB(),\n        side: BackSide,\n        transparent: true,\n        opacity: 0.5 * hintOpacityScale\n      }),\n      oriented: orientedMaterialHint,\n      experimentalOriented2: experimentalOriented2MaterialHint,\n      ignored: ignoredMaterialHint,\n      invisible: invisibleMaterial,\n      mystery: mysterMaterialHint\n    };\n  }\n};\nvar axesInfo = [\n  new AxisInfo(\n    new Vector3(0, 1, 0),\n    new Euler(-TAU / 4, 0, 0),\n    16777215,\n    14540253,\n    1.25\n  ),\n  new AxisInfo(\n    new Vector3(-1, 0, 0),\n    new Euler(0, -TAU / 4, 0),\n    16750848,\n    8934656,\n    1,\n    { hintDimColor: 8930304 }\n  ),\n  new AxisInfo(\n    new Vector3(0, 0, 1),\n    new Euler(0, 0, 0),\n    65280,\n    34816,\n    1,\n    { hintDimColor: 39168 }\n  ),\n  new AxisInfo(\n    new Vector3(1, 0, 0),\n    new Euler(0, TAU / 4, 0),\n    16711680,\n    6684672,\n    1,\n    { hintDimColor: 6684672 }\n  ),\n  new AxisInfo(\n    new Vector3(0, 0, -1),\n    new Euler(0, TAU / 2, 0),\n    2254591,\n    1127304,\n    0.75,\n    { hintDimColor: 6246 }\n  ),\n  new AxisInfo(\n    new Vector3(0, -1, 0),\n    new Euler(TAU / 4, 0, 0),\n    16776960,\n    8947712,\n    1.25,\n    { hintDimColor: 14540032 }\n  )\n];\nvar face = {\n  U: 0,\n  L: 1,\n  F: 2,\n  R: 3,\n  B: 4,\n  D: 5\n};\nvar familyToAxis = {\n  U: face.U,\n  u: face.U,\n  Uw: face.U,\n  Uv: face.U,\n  y: face.U,\n  L: face.L,\n  l: face.L,\n  Lw: face.L,\n  Lv: face.L,\n  M: face.L,\n  F: face.F,\n  f: face.F,\n  Fw: face.F,\n  Fv: face.F,\n  S: face.F,\n  z: face.F,\n  R: face.R,\n  r: face.R,\n  Rw: face.R,\n  Rv: face.R,\n  x: face.R,\n  B: face.B,\n  b: face.B,\n  Bw: face.B,\n  Bv: face.B,\n  D: face.D,\n  d: face.D,\n  Dw: face.D,\n  Dv: face.D,\n  E: face.D\n};\nvar cubieDimensions = {\n  // stickerWidth: 0.85, // Now `faceletScale` in options.\n  stickerElevation: 0.503,\n  foundationWidth: 1,\n  hintStickerElevation: 1.45\n};\nvar EXPERIMENTAL_PICTURE_CUBE_HINT_ELEVATION = 2;\nvar cube3DOptionsDefaults = {\n  showMainStickers: true,\n  hintFacelets: \"floating\",\n  showFoundation: true,\n  experimentalStickeringMask: void 0,\n  foundationSprite: null,\n  hintSprite: null,\n  initialHintFaceletsAnimation: \"auto\",\n  faceletScale: \"auto\"\n};\nvar DEFAULT_STICKER_SCALE = 0.85;\nfunction getFaceletScale(options) {\n  if (typeof options.faceletScale === \"undefined\" || options.faceletScale === \"auto\") {\n    return DEFAULT_STICKER_SCALE;\n  }\n  return options.faceletScale;\n}\nvar blackMesh = new MeshBasicMaterial({\n  color: 0,\n  opacity: 1,\n  transparent: true\n});\nvar blackTranslucentMesh = new MeshBasicMaterial({\n  color: 0,\n  opacity: 0.3,\n  transparent: true\n});\nvar CubieDef = class {\n  // stickerFaceNames can be e.g. [\"U\", \"F\", \"R\"], \"UFR\" if every face is a single letter.\n  constructor(orbit, stickerFaceNames, q) {\n    __publicField(this, \"matrix\");\n    __publicField(this, \"stickerFaces\");\n    this.orbit = orbit;\n    const individualStickerFaceNames = typeof stickerFaceNames === \"string\" ? stickerFaceNames.split(\"\") : stickerFaceNames;\n    this.stickerFaces = individualStickerFaceNames.map((s) => face[s]);\n    this.matrix = new Matrix4();\n    this.matrix.setPosition(firstPiecePosition[orbit]);\n    this.matrix.premultiply(new Matrix4().makeRotationFromQuaternion(q));\n  }\n};\nfunction t(v, t4) {\n  return new Quaternion().setFromAxisAngle(v, TAU * t4 / 4);\n}\nvar r = {\n  O: new Vector3(0, 0, 0),\n  U: new Vector3(0, -1, 0),\n  L: new Vector3(1, 0, 0),\n  F: new Vector3(0, 0, -1),\n  R: new Vector3(-1, 0, 0),\n  B: new Vector3(0, 0, 1),\n  D: new Vector3(0, 1, 0)\n};\nvar firstPiecePosition = {\n  EDGES: new Vector3(0, 1, 1),\n  CORNERS: new Vector3(1, 1, 1),\n  CENTERS: new Vector3(0, 1, 0)\n};\nvar orientationRotation = {\n  EDGES: [0, 1].map(\n    (i) => new Matrix4().makeRotationAxis(\n      firstPiecePosition.EDGES.clone().normalize(),\n      -i * TAU / 2\n    )\n  ),\n  CORNERS: [0, 1, 2].map(\n    (i) => new Matrix4().makeRotationAxis(\n      firstPiecePosition.CORNERS.clone().normalize(),\n      -i * TAU / 3\n    )\n  ),\n  CENTERS: [0, 1, 2, 3].map(\n    (i) => new Matrix4().makeRotationAxis(\n      firstPiecePosition.CENTERS.clone().normalize(),\n      -i * TAU / 4\n    )\n  )\n};\nvar cubieStickerOrder = [face.U, face.F, face.R];\nvar pieceDefs = {\n  EDGES: [\n    new CubieDef(\"EDGES\", \"UF\", t(r.O, 0)),\n    new CubieDef(\"EDGES\", \"UR\", t(r.U, 3)),\n    new CubieDef(\"EDGES\", \"UB\", t(r.U, 2)),\n    new CubieDef(\"EDGES\", \"UL\", t(r.U, 1)),\n    new CubieDef(\"EDGES\", \"DF\", t(r.F, 2)),\n    new CubieDef(\"EDGES\", \"DR\", t(r.F, 2).premultiply(t(r.D, 1))),\n    new CubieDef(\"EDGES\", \"DB\", t(r.F, 2).premultiply(t(r.D, 2))),\n    new CubieDef(\"EDGES\", \"DL\", t(r.F, 2).premultiply(t(r.D, 3))),\n    new CubieDef(\"EDGES\", \"FR\", t(r.U, 3).premultiply(t(r.R, 3))),\n    new CubieDef(\"EDGES\", \"FL\", t(r.U, 1).premultiply(t(r.R, 3))),\n    new CubieDef(\"EDGES\", \"BR\", t(r.U, 3).premultiply(t(r.R, 1))),\n    new CubieDef(\"EDGES\", \"BL\", t(r.U, 1).premultiply(t(r.R, 1)))\n  ],\n  CORNERS: [\n    new CubieDef(\"CORNERS\", \"UFR\", t(r.O, 0)),\n    new CubieDef(\"CORNERS\", \"URB\", t(r.U, 3)),\n    new CubieDef(\"CORNERS\", \"UBL\", t(r.U, 2)),\n    new CubieDef(\"CORNERS\", \"ULF\", t(r.U, 1)),\n    new CubieDef(\"CORNERS\", \"DRF\", t(r.F, 2).premultiply(t(r.D, 1))),\n    new CubieDef(\"CORNERS\", \"DFL\", t(r.F, 2).premultiply(t(r.D, 0))),\n    new CubieDef(\"CORNERS\", \"DLB\", t(r.F, 2).premultiply(t(r.D, 3))),\n    new CubieDef(\"CORNERS\", \"DBR\", t(r.F, 2).premultiply(t(r.D, 2)))\n  ],\n  CENTERS: [\n    new CubieDef(\"CENTERS\", \"U\", t(r.O, 0)),\n    new CubieDef(\"CENTERS\", \"L\", t(r.R, 3).premultiply(t(r.U, 1))),\n    new CubieDef(\"CENTERS\", \"F\", t(r.R, 3)),\n    new CubieDef(\"CENTERS\", \"R\", t(r.R, 3).premultiply(t(r.D, 1))),\n    new CubieDef(\"CENTERS\", \"B\", t(r.R, 3).premultiply(t(r.D, 2))),\n    new CubieDef(\"CENTERS\", \"D\", t(r.R, 2))\n  ]\n};\nvar CUBE_SCALE = 1 / 3;\nvar pictureStickerCoords = {\n  EDGES: [\n    [\n      [0, 4, 6],\n      [0, 4, 5]\n    ],\n    [\n      [3, 5, 7],\n      [0, 7, 5]\n    ],\n    [\n      [2, 4, 8],\n      [0, 10, 5]\n    ],\n    [\n      [1, 3, 7],\n      [0, 1, 5]\n    ],\n    [\n      [2, 4, 2],\n      [2, 4, 3]\n    ],\n    [\n      [3, 5, 1],\n      [2, 7, 3]\n    ],\n    [\n      [0, 4, 0],\n      [2, 10, 3]\n    ],\n    [\n      [1, 3, 1],\n      [2, 1, 3]\n    ],\n    [\n      [3, 5, 4],\n      [3, 6, 4]\n    ],\n    [\n      [1, 3, 4],\n      [1, 2, 4]\n    ],\n    [\n      [1, 9, 4],\n      [1, 8, 4]\n    ],\n    [\n      [3, 11, 4],\n      [3, 0, 4]\n    ]\n  ],\n  CORNERS: [\n    [\n      [0, 5, 6],\n      [0, 5, 5],\n      [0, 6, 5]\n    ],\n    [\n      [3, 5, 8],\n      [0, 8, 5],\n      [0, 9, 5]\n    ],\n    [\n      [2, 3, 8],\n      [0, 11, 5],\n      [0, 0, 5]\n    ],\n    [\n      [1, 3, 6],\n      [0, 2, 5],\n      [0, 3, 5]\n    ],\n    [\n      [3, 5, 2],\n      [2, 6, 3],\n      [2, 5, 3]\n    ],\n    [\n      [2, 3, 2],\n      [2, 3, 3],\n      [2, 2, 3]\n    ],\n    [\n      [1, 3, 0],\n      [2, 0, 3],\n      [2, 11, 3]\n    ],\n    [\n      [0, 5, 0],\n      [2, 9, 3],\n      [2, 8, 3]\n    ]\n  ],\n  CENTERS: [\n    [[0, 4, 7]],\n    [[0, 1, 4]],\n    [[0, 4, 4]],\n    [[0, 7, 4]],\n    [[0, 10, 4]],\n    [[0, 4, 1]]\n  ]\n};\nvar sharedCubieFoundationGeometryCache = null;\nfunction sharedCubieFoundationGeometry() {\n  return sharedCubieFoundationGeometryCache ?? (sharedCubieFoundationGeometryCache = new BoxGeometry(\n    cubieDimensions.foundationWidth,\n    cubieDimensions.foundationWidth,\n    cubieDimensions.foundationWidth\n  ));\n}\nfunction newStickerGeometry() {\n  const r2 = new BufferGeometry();\n  const half = 0.5;\n  r2.setAttribute(\n    \"position\",\n    new BufferAttribute(\n      new Float32Array([\n        half,\n        half,\n        0,\n        -half,\n        half,\n        0,\n        half,\n        -half,\n        0,\n        -half,\n        half,\n        0,\n        -half,\n        -half,\n        0,\n        half,\n        -half,\n        0\n      ]),\n      3\n    )\n  );\n  r2.setAttribute(\n    \"uv\",\n    new BufferAttribute(\n      new Float32Array([\n        1,\n        1,\n        0,\n        1,\n        1,\n        0,\n        0,\n        1,\n        0,\n        0,\n        1,\n        0,\n        0,\n        1,\n        0,\n        0,\n        1,\n        1,\n        0,\n        0,\n        1,\n        0,\n        1,\n        1\n      ]),\n      2\n    )\n  );\n  return r2;\n}\nvar sharedStickerGeometryCache = null;\nfunction sharedStickerGeometry() {\n  return sharedStickerGeometryCache ?? (sharedStickerGeometryCache = newStickerGeometry());\n}\nvar _sharedHintStickerGeometryCache, _sharedHintStickerGeometry, sharedHintStickerGeometry_fn, _animateRaiseHintFacelets, animateRaiseHintFacelets_fn, _a;\nvar Cube3D = (_a = class extends Object3D {\n  constructor(kpuzzle, scheduleRenderCallback, options = {}) {\n    super();\n    __privateAdd(this, _sharedHintStickerGeometry);\n    // TODO: Generalize this into an animation mechanism.\n    __privateAdd(this, _animateRaiseHintFacelets);\n    __publicField(this, \"kpuzzleFaceletInfo\");\n    __publicField(this, \"pieces\", {});\n    __publicField(this, \"options\");\n    // TODO: Keep track of option-based meshes better.\n    __publicField(this, \"experimentalHintStickerMeshes\", []);\n    __publicField(this, \"experimentalFoundationMeshes\", []);\n    __publicField(this, \"setSpriteURL\");\n    __publicField(this, \"sprite\", new Promise((resolve) => {\n      this.setSpriteURL = (url) => {\n        svgLoader.load(url, resolve);\n      };\n    }));\n    __publicField(this, \"setHintSpriteURL\");\n    __publicField(this, \"hintSprite\", new Promise((resolve) => {\n      this.setHintSpriteURL = (url) => {\n        svgLoader.load(url, resolve);\n      };\n    }));\n    __privateAdd(this, _sharedHintStickerGeometryCache, null);\n    this.kpuzzle = kpuzzle;\n    this.scheduleRenderCallback = scheduleRenderCallback;\n    this.options = { ...cube3DOptionsDefaults };\n    Object.assign(this.options, options);\n    if (this.kpuzzle.name() !== \"3x3x3\") {\n      throw new Error(\n        `Invalid puzzle for this Cube3D implementation: ${this.kpuzzle.name()}`\n      );\n    }\n    if (options.foundationSprite) {\n      this.setSprite(options.foundationSprite);\n    }\n    if (options.hintSprite) {\n      this.setHintSprite(options.hintSprite);\n    }\n    this.kpuzzleFaceletInfo = {};\n    for (const orbit in pieceDefs) {\n      const orbitFaceletInfo = [];\n      this.kpuzzleFaceletInfo[orbit] = orbitFaceletInfo;\n      this.pieces[orbit] = pieceDefs[orbit].map(\n        this.createCubie.bind(this, orbit, orbitFaceletInfo)\n      );\n    }\n    this.scale.set(CUBE_SCALE, CUBE_SCALE, CUBE_SCALE);\n    if (this.options.experimentalStickeringMask) {\n      this.setStickeringMask(this.options.experimentalStickeringMask);\n    }\n    __privateMethod(this, _animateRaiseHintFacelets, animateRaiseHintFacelets_fn).call(this);\n    if (this.options.faceletScale) {\n      this.experimentalSetFaceletScale(this.options.faceletScale);\n    }\n  }\n  // TODO: Don't overwrite the static function.\n  // TODO: This doesn't work dynamically yet.\n  setSprite(texture) {\n    this.sprite = texture;\n  }\n  // TODO: Don't overwrite the static function.\n  // TODO: This doesn't work dynamically yet.\n  setHintSprite(texture) {\n    this.hintSprite = texture;\n  }\n  // Can only be called once.\n  /** @deprecated */\n  experimentalSetStickerSpriteURL(stickerSpriteURL) {\n    this.setSpriteURL(stickerSpriteURL);\n  }\n  // Can only be called once.\n  /** @deprecated */\n  experimentalSetHintStickerSpriteURL(hintStickerSpriteURL) {\n    this.setHintSpriteURL(hintStickerSpriteURL);\n  }\n  setStickeringMask(stickeringMask) {\n    if (stickeringMask.specialBehaviour === \"picture\") {\n      for (const pieceInfos of Object.values(this.kpuzzleFaceletInfo)) {\n        for (const faceletInfos of pieceInfos) {\n          for (const faceletInfo of faceletInfos) {\n            faceletInfo.facelet.material = invisibleMaterial;\n            const { hintFacelet } = faceletInfo;\n            if (hintFacelet) {\n              hintFacelet.material = invisibleMaterial;\n            }\n          }\n        }\n      }\n      return;\n    }\n    this.options.experimentalStickeringMask = stickeringMask;\n    for (const [orbitName, orbitStickeringMask] of Object.entries(\n      stickeringMask.orbits\n    )) {\n      for (let pieceIdx = 0; pieceIdx < orbitStickeringMask.pieces.length; pieceIdx++) {\n        const pieceStickeringMask = orbitStickeringMask.pieces[pieceIdx];\n        if (pieceStickeringMask) {\n          const pieceInfo = this.kpuzzleFaceletInfo[orbitName][pieceIdx];\n          for (let faceletIdx = 0; faceletIdx < pieceInfo.length; faceletIdx++) {\n            const faceletStickeringMask = pieceStickeringMask.facelets[faceletIdx];\n            if (faceletStickeringMask) {\n              const faceletInfo = pieceInfo[faceletIdx];\n              const stickeringMask2 = typeof faceletStickeringMask === \"string\" ? faceletStickeringMask : faceletStickeringMask?.mask;\n              faceletInfo.facelet.material = axesInfo[faceletInfo.faceIdx].stickerMaterial[stickeringMask2];\n              const hintStickeringMask = typeof faceletStickeringMask === \"string\" ? stickeringMask2 : faceletStickeringMask.hintMask ?? stickeringMask2;\n              if (faceletInfo.hintFacelet) {\n                faceletInfo.hintFacelet.material = axesInfo[faceletInfo.faceIdx].hintStickerMaterial[hintStickeringMask];\n              }\n            }\n          }\n        }\n      }\n    }\n    if (this.scheduleRenderCallback) {\n      this.scheduleRenderCallback();\n    }\n  }\n  /** @deprecated */\n  experimentalUpdateOptions(options) {\n    if (\"showMainStickers\" in options) {\n      throw new Error(\"Unimplemented\");\n    }\n    const showFoundation = options.showFoundation;\n    if (typeof showFoundation !== \"undefined\" && this.options.showFoundation !== showFoundation) {\n      this.options.showFoundation = showFoundation;\n      for (const foundation of this.experimentalFoundationMeshes) {\n        foundation.visible = showFoundation;\n      }\n    }\n    const hintFacelets = options.hintFacelets;\n    if (typeof hintFacelets !== \"undefined\" && this.options.hintFacelets !== hintFacelets && hintFaceletStyles[hintFacelets]) {\n      this.options.hintFacelets = hintFacelets;\n      for (const hintSticker of this.experimentalHintStickerMeshes) {\n        hintSticker.visible = hintFacelets === \"floating\";\n      }\n      this.scheduleRenderCallback();\n    }\n    const { experimentalStickeringMask } = options;\n    if (typeof experimentalStickeringMask !== \"undefined\") {\n      this.options.experimentalStickeringMask = experimentalStickeringMask;\n      this.setStickeringMask(experimentalStickeringMask);\n      this.scheduleRenderCallback();\n    }\n    const { faceletScale } = options;\n    if (typeof faceletScale !== \"undefined\") {\n      this.experimentalSetFaceletScale(faceletScale);\n    }\n  }\n  onPositionChange(p) {\n    const reid333 = p.pattern;\n    for (const orbit in pieceDefs) {\n      const pieces = pieceDefs[orbit];\n      for (let i = 0; i < pieces.length; i++) {\n        const j = reid333.patternData[orbit].pieces[i];\n        this.pieces[orbit][j].matrix.copy(pieceDefs[orbit][i].matrix);\n        this.pieces[orbit][j].matrix.multiply(\n          orientationRotation[orbit][reid333.patternData[orbit].orientation[i]]\n        );\n      }\n      for (const moveProgress of p.movesInProgress) {\n        const move = moveProgress.move;\n        const turnNormal = axesInfo[familyToAxis[move.family]].vector;\n        const moveMatrix = new Matrix4().makeRotationAxis(\n          turnNormal,\n          -this.ease(moveProgress.fraction) * moveProgress.direction * move.amount * TAU / 4\n        );\n        for (let i = 0; i < pieces.length; i++) {\n          const quantumTransformation = this.kpuzzle.moveToTransformation(\n            move.modified({ amount: 1 })\n          );\n          const k = quantumTransformation.transformationData[orbit].permutation[i];\n          if (i !== k || quantumTransformation.transformationData[orbit].orientationDelta[i] !== 0) {\n            const j = reid333.patternData[orbit].pieces[i];\n            this.pieces[orbit][j].matrix.premultiply(moveMatrix);\n          }\n        }\n      }\n    }\n    this.scheduleRenderCallback();\n  }\n  // TODO: Always create (but sometimes hide parts) so we can show them later,\n  // or (better) support creating puzzle parts on demand.\n  createCubie(orbit, orbitFacelets, piece, orbitPieceIdx) {\n    const cubieFaceletInfo = [];\n    orbitFacelets.push(cubieFaceletInfo);\n    const cubie = new Group();\n    if (this.options.showFoundation) {\n      const foundation = this.createCubieFoundation();\n      cubie.add(foundation);\n      this.experimentalFoundationMeshes.push(foundation);\n    }\n    for (let i = 0; i < piece.stickerFaces.length; i++) {\n      const sticker = this.createSticker(\n        axesInfo[cubieStickerOrder[i]],\n        axesInfo[piece.stickerFaces[i]],\n        false\n      );\n      const faceletInfo = {\n        faceIdx: piece.stickerFaces[i],\n        facelet: sticker\n      };\n      cubie.add(sticker);\n      if (this.options.hintFacelets === \"floating\") {\n        const hintSticker = this.createSticker(\n          axesInfo[cubieStickerOrder[i]],\n          axesInfo[piece.stickerFaces[i]],\n          true\n        );\n        cubie.add(hintSticker);\n        faceletInfo.hintFacelet = hintSticker;\n        this.experimentalHintStickerMeshes.push(hintSticker);\n      }\n      if (this.options.experimentalStickeringMask?.specialBehaviour === \"picture\" && pictureStickerCoords[orbit] && pictureStickerCoords[orbit][orbitPieceIdx] && pictureStickerCoords[orbit][orbitPieceIdx][i]) {\n        const [rotate, offsetX, offsetY] = pictureStickerCoords[orbit][orbitPieceIdx][i];\n        (async () => {\n          const addImageSticker = async (hint) => {\n            const texture = await (hint ? this.hintSprite : this.sprite);\n            const mesh = this.createSticker(\n              axesInfo[cubieStickerOrder[i]],\n              axesInfo[piece.stickerFaces[i]],\n              hint\n            );\n            mesh.material = new MeshBasicMaterial({\n              map: texture,\n              side: hint ? BackSide : DoubleSide,\n              transparent: true\n            });\n            const x1 = offsetX / 12;\n            const x2 = (offsetX + 1) / 12;\n            const y1 = offsetY / 9;\n            const y2 = (offsetY + 1) / 9;\n            let v1 = new Vector2(x1, y1);\n            let v2 = new Vector2(x1, y2);\n            let v3 = new Vector2(x2, y2);\n            let v4 = new Vector2(x2, y1);\n            switch (rotate) {\n              case 1: {\n                [v1, v2, v3, v4] = [v2, v3, v4, v1];\n                break;\n              }\n              case 2: {\n                [v1, v2, v3, v4] = [v3, v4, v1, v2];\n                break;\n              }\n              case 3: {\n                [v1, v2, v3, v4] = [v4, v1, v2, v3];\n                break;\n              }\n            }\n            mesh.geometry.setAttribute(\n              \"uv\",\n              new BufferAttribute(\n                new Float32Array([\n                  v3.x,\n                  v3.y,\n                  v2.x,\n                  v2.y,\n                  v4.x,\n                  v4.y,\n                  v2.x,\n                  v2.y,\n                  v1.x,\n                  v1.y,\n                  v4.x,\n                  v4.y\n                ]),\n                2\n              )\n            );\n            cubie.add(mesh);\n          };\n          addImageSticker(true);\n          addImageSticker(false);\n        })();\n      }\n      cubieFaceletInfo.push(faceletInfo);\n    }\n    cubie.matrix.copy(piece.matrix);\n    cubie.matrixAutoUpdate = false;\n    this.add(cubie);\n    return cubie;\n  }\n  // TODO: Support creating only the outward-facing parts?\n  createCubieFoundation() {\n    const box = sharedCubieFoundationGeometry();\n    return new Mesh(\n      box,\n      this.options.experimentalStickeringMask?.specialBehaviour === \"picture\" ? blackMesh : blackTranslucentMesh\n    );\n  }\n  createSticker(posAxisInfo, materialAxisInfo, isHint) {\n    const geo = this.options.experimentalStickeringMask?.specialBehaviour === \"picture\" ? newStickerGeometry() : isHint ? __privateMethod(this, _sharedHintStickerGeometry, sharedHintStickerGeometry_fn).call(this) : sharedStickerGeometry();\n    const stickerMesh = new Mesh(\n      geo,\n      isHint ? materialAxisInfo.hintStickerMaterial.regular : materialAxisInfo.stickerMaterial.regular\n    );\n    stickerMesh.setRotationFromEuler(posAxisInfo.fromZ);\n    stickerMesh.position.copy(posAxisInfo.vector);\n    stickerMesh.position.multiplyScalar(\n      isHint ? this.options.experimentalStickeringMask?.specialBehaviour === \"picture\" ? EXPERIMENTAL_PICTURE_CUBE_HINT_ELEVATION : cubieDimensions.hintStickerElevation : cubieDimensions.stickerElevation\n    );\n    stickerMesh.scale.setScalar(getFaceletScale(this.options));\n    return stickerMesh;\n  }\n  /** @deprecated */\n  experimentalSetFoundationOpacity(opacity) {\n    this.experimentalFoundationMeshes[0].material.opacity = opacity;\n  }\n  /** @deprecated */\n  experimentalSetFaceletScale(faceletScale) {\n    this.options.faceletScale = faceletScale;\n    for (const orbitInfo of Object.values(this.kpuzzleFaceletInfo)) {\n      for (const pieceInfo of orbitInfo) {\n        for (const faceletInfo of pieceInfo) {\n          faceletInfo.facelet.scale.setScalar(getFaceletScale(this.options));\n          faceletInfo.hintFacelet?.scale.setScalar(\n            getFaceletScale(this.options)\n          );\n        }\n      }\n    }\n  }\n  // /** @deprecated */\n  // experimentalSetCenterStickerWidth(width: number): void {\n  //   for (const orbitInfo of [this.kpuzzleFaceletInfo[\"CENTERS\"]]) {\n  //     for (const pieceInfo of orbitInfo) {\n  //       for (const faceletInfo of pieceInfo) {\n  //         faceletInfo.facelet.scale.setScalar(\n  //           width / getStickerScale(this.options),\n  //         );\n  //         // faceletInfo.facelet.setRotationFromAxisAngle(new Vector3(0, 1, 0), 0);\n  //         // faceletInfo.facelet.rotateOnAxis(new Vector3(1, 0, 1), TAU / 6);\n  //       }\n  //     }\n  //   }\n  // }\n  ease(fraction) {\n    return smootherStep(fraction);\n  }\n}, _sharedHintStickerGeometryCache = new WeakMap(), _sharedHintStickerGeometry = new WeakSet(), sharedHintStickerGeometry_fn = function() {\n  return __privateGet(this, _sharedHintStickerGeometryCache) ?? __privateSet(this, _sharedHintStickerGeometryCache, newStickerGeometry());\n}, _animateRaiseHintFacelets = new WeakSet(), animateRaiseHintFacelets_fn = function() {\n  if (this.options.initialHintFaceletsAnimation === \"none\" || this.options.initialHintFaceletsAnimation !== \"always\" && haveStartedSharingRenderers()) {\n    return;\n  }\n  const translationRange = cubieDimensions.hintStickerElevation - cubieDimensions.stickerElevation;\n  __privateMethod(this, _sharedHintStickerGeometry, sharedHintStickerGeometry_fn).call(this).translate(0, 0, -translationRange);\n  setTimeout(() => {\n    const hintStartTime = performance.now();\n    let lastTranslation = 0;\n    const translationDuration = 1e3;\n    function ease(x) {\n      return x * (2 - x);\n    }\n    const animateRaiseHintSticker = () => {\n      const elapsed = performance.now() - hintStartTime;\n      const newTranslation = ease(elapsed / translationDuration) * translationRange;\n      __privateMethod(this, _sharedHintStickerGeometry, sharedHintStickerGeometry_fn).call(this).translate(\n        0,\n        0,\n        newTranslation - lastTranslation\n      );\n      lastTranslation = newTranslation;\n      if (elapsed < translationDuration) {\n        requestAnimationFrame(animateRaiseHintSticker);\n        this.scheduleRenderCallback?.();\n      }\n    };\n    animateRaiseHintSticker();\n  }, 500);\n}, _a);\nvar foundationMaterial = new MeshBasicMaterial({\n  side: DoubleSide,\n  color: 0\n});\nvar invisMaterial = new MeshBasicMaterial({\n  visible: false\n});\nvar basicStickerMaterial = new MeshBasicMaterial({\n  vertexColors: true\n});\nfunction dist(coords, a, b) {\n  return Math.hypot(\n    coords[3 * a] - coords[3 * b],\n    coords[3 * a + 1] - coords[3 * b + 1],\n    coords[3 * a + 2] - coords[3 * b + 2]\n  );\n}\nfunction triarea(coords, a, b, c) {\n  const ab = dist(coords, a, b);\n  const bc = dist(coords, b, c);\n  const ac = dist(coords, a, c);\n  const p = (ab + bc + ac) / 2;\n  return Math.sqrt(p * (p - ab) * (p - bc) * (p - ac));\n}\nfunction polyarea(coords) {\n  let sum = 0;\n  for (let i = 2; 3 * i < coords.length; i++) {\n    sum += triarea(coords, 0, 1, i);\n  }\n  return sum;\n}\nfunction normalize(r2) {\n  const m = Math.hypot(r2[0], r2[1], r2[2]);\n  r2[0] /= m;\n  r2[1] /= m;\n  r2[2] /= m;\n  return r2;\n}\nfunction cross(a, b) {\n  const r2 = new Array(3);\n  r2[0] = a[1] * b[2] - a[2] * b[1];\n  r2[1] = a[2] * b[0] - a[0] * b[2];\n  r2[2] = a[0] * b[1] - a[1] * b[0];\n  return r2;\n}\nfunction normal(c) {\n  const a = [c[3] - c[0], c[4] - c[1], c[5] - c[2]];\n  const b = [c[6] - c[3], c[7] - c[4], c[8] - c[5]];\n  const r2 = cross(a, b);\n  return normalize(r2);\n}\nfunction trimEdges(face2, tr) {\n  const r2 = [];\n  const A = new Array(3);\n  const B = new Array(3);\n  for (let iter = 1; iter < 10; iter++) {\n    for (let i = 0; i < face2.length; i += 3) {\n      const pi = (i + face2.length - 3) % face2.length;\n      const ni = (i + 3) % face2.length;\n      for (let k = 0; k < 3; k++) {\n        A[k] = face2[pi + k] - face2[i + k];\n        B[k] = face2[ni + k] - face2[i + k];\n      }\n      const alen = Math.hypot(A[0], A[1], A[2]);\n      const blen = Math.hypot(B[0], B[1], B[2]);\n      for (let k = 0; k < 3; k++) {\n        A[k] /= alen;\n        B[k] /= blen;\n      }\n      const d = A[0] * B[0] + A[1] * B[1] + A[2] * B[2];\n      const m = tr / Math.sqrt(1 - d * d);\n      for (let k = 0; k < 3; k++) {\n        r2[i + k] = face2[i + k] + (A[k] + B[k]) * m;\n      }\n    }\n    let good = true;\n    for (let i = 0; good && i < r2.length; i += 3) {\n      const ni = (i + 3) % face2.length;\n      let t2 = 0;\n      for (let k = 0; k < 3; k++) {\n        const a = face2[ni + k] - face2[i + k];\n        const b = r2[ni + k] - r2[i + k];\n        t2 += a * b;\n      }\n      if (t2 <= 0) {\n        good = false;\n      }\n    }\n    if (good) {\n      return r2;\n    }\n    tr /= 2;\n  }\n  return face2;\n}\nvar Filler = class {\n  constructor(sz, tm) {\n    __publicField(this, \"pos\");\n    __publicField(this, \"ipos\");\n    __publicField(this, \"vertices\");\n    __publicField(this, \"colors\");\n    __publicField(this, \"uvs\");\n    __publicField(this, \"ind\");\n    this.sz = sz;\n    this.tm = tm;\n    this.vertices = new Float32Array(9 * sz);\n    this.uvs = void 0;\n    this.colors = new Uint8Array(18 * sz);\n    this.ind = new Uint8Array(sz);\n    this.pos = 0;\n    this.ipos = 0;\n  }\n  add(pt, i, c) {\n    this.vertices[this.pos] = pt[3 * i + 0];\n    this.vertices[this.pos + 1] = pt[3 * i + 1];\n    this.vertices[this.pos + 2] = pt[3 * i + 2];\n    this.colors[this.pos] = c >> 16;\n    this.colors[this.pos + 1] = c >> 8 & 255;\n    this.colors[this.pos + 2] = c & 255;\n    this.pos += 3;\n  }\n  addUncolored(pt, i) {\n    this.vertices[this.pos] = pt[3 * i + 0];\n    this.vertices[this.pos + 1] = pt[3 * i + 1];\n    this.vertices[this.pos + 2] = pt[3 * i + 2];\n    this.pos += 3;\n  }\n  setind(i) {\n    this.ind[this.ipos++] = i;\n  }\n  makePoly(coords, color, ind) {\n    const ncoords = coords;\n    for (let g = 1; 3 * (g + 1) < ncoords.length; g++) {\n      this.add(ncoords, 0, color);\n      this.add(ncoords, g, color);\n      this.add(ncoords, g + 1, color);\n      this.setind(ind);\n    }\n  }\n  setAttributes(geo) {\n    geo.setAttribute(\"position\", new BufferAttribute(this.vertices, 3));\n    const sa2 = this.colors.subarray(0, 9 * this.sz);\n    geo.setAttribute(\"color\", new BufferAttribute(sa2, 3, true));\n  }\n  makeGroups(geo) {\n    geo.clearGroups();\n    for (let i = 0; i < this.ipos; ) {\n      const si = i++;\n      const iv = this.ind[si];\n      while (this.ind[i] === iv) {\n        i++;\n      }\n      geo.addGroup(3 * si, 3 * (i - si), iv);\n    }\n  }\n  saveOriginalColors() {\n    this.colors.copyWithin(this.pos, 0, this.pos);\n  }\n};\nvar StickerDef = class {\n  constructor(filler, stickerDat, trim, options) {\n    __publicField(this, \"origColor\");\n    __publicField(this, \"origColorStickeringMask\");\n    __publicField(this, \"faceColor\");\n    __publicField(this, \"texturePtr\");\n    __publicField(this, \"twistVal\", -1);\n    __publicField(this, \"stickerStart\");\n    __publicField(this, \"stickerEnd\");\n    __publicField(this, \"hintStart\");\n    __publicField(this, \"hintEnd\");\n    __publicField(this, \"foundationStart\");\n    __publicField(this, \"foundationEnd\");\n    __publicField(this, \"isDup\");\n    __publicField(this, \"faceNum\");\n    this.isDup = !!stickerDat.isDup;\n    this.faceNum = stickerDat.face;\n    this.stickerStart = filler.ipos;\n    const sdColor = new Color(stickerDat.color).getHex();\n    this.origColor = sdColor;\n    this.origColorStickeringMask = sdColor;\n    if (options?.stickeringMask) {\n      this.setStickeringMask(filler, options.stickeringMask);\n    }\n    this.faceColor = sdColor;\n    const coords = this.stickerCoords(stickerDat.coords, trim);\n    filler.makePoly(coords, this.faceColor, this.isDup ? 4 : 0);\n    this.stickerEnd = filler.ipos;\n  }\n  stickerCoords(coords, trim) {\n    return trimEdges(coords.slice(), trim);\n  }\n  hintCoords(coords, hintStickerHeightScale, trim, normal2) {\n    coords = this.stickerCoords(coords, trim);\n    normal2 = normal2.slice();\n    for (let i = 0; i < 3; i++) {\n      normal2[i] *= 0.5 * hintStickerHeightScale;\n    }\n    const hCoords = new Array(coords.length);\n    for (let i = 0; 3 * i < coords.length; i++) {\n      const j = coords.length / 3 - 1 - i;\n      hCoords[3 * i] = coords[3 * j] + normal2[0];\n      hCoords[3 * i + 1] = coords[3 * j + 1] + normal2[1];\n      hCoords[3 * i + 2] = coords[3 * j + 2] + normal2[2];\n    }\n    return hCoords;\n  }\n  foundationCoords(coords) {\n    const ncoords = coords.slice();\n    for (let i = 0; i < coords.length; i++) {\n      ncoords[i] = coords[i] * 0.995;\n    }\n    return ncoords;\n  }\n  addHint(filler, stickerDat, hintStickers, hintStickerHeightScale, trim, normal2) {\n    this.hintStart = filler.ipos;\n    const coords = this.hintCoords(\n      stickerDat.coords,\n      hintStickerHeightScale,\n      trim,\n      normal2\n    );\n    filler.makePoly(\n      coords,\n      this.faceColor,\n      hintStickers && !this.isDup ? 2 : 4\n    );\n    this.hintEnd = filler.ipos;\n  }\n  addFoundation(filler, stickerDat, black) {\n    this.foundationStart = filler.ipos;\n    const coords = this.foundationCoords(stickerDat.coords);\n    filler.makePoly(coords, black, this.isDup ? 4 : 6);\n    this.foundationEnd = filler.ipos;\n  }\n  setHintStickers(filler, hintStickers) {\n    const indv = this.isDup || !hintStickers ? 4 : 2;\n    for (let i = this.hintStart; i < this.hintEnd; i++) {\n      filler.ind[i] = indv | filler.ind[i] & 1;\n    }\n  }\n  setStickeringMask(filler, faceletMeshStickeringMask) {\n    let c = 0;\n    switch (faceletMeshStickeringMask) {\n      case \"regular\": {\n        c = this.origColor;\n        break;\n      }\n      case \"dim\": {\n        if (this.origColor === 16777215) {\n          c = 14540253;\n        } else {\n          c = new Color(this.origColor).multiplyScalar(0.5).getHex();\n        }\n        break;\n      }\n      case \"oriented\": {\n        c = 4513228;\n        break;\n      }\n      case \"experimentalOriented2\": {\n        c = 16776618;\n        break;\n      }\n      case \"ignored\": {\n        c = 4473924;\n        break;\n      }\n      case \"mystery\": {\n        c = 15911883;\n        break;\n      }\n      case \"invisible\":\n        c = this.origColor;\n    }\n    this.origColorStickeringMask = c;\n    for (let i = 9 * this.stickerStart; i < 9 * this.stickerEnd; i += 3) {\n      filler.colors[filler.pos + i] = c >> 16;\n      filler.colors[filler.pos + i + 1] = c >> 8 & 255;\n      filler.colors[filler.pos + i + 2] = c & 255;\n    }\n    for (let i = 9 * this.hintStart; i < 9 * this.hintEnd; i += 3) {\n      filler.colors[filler.pos + i] = c >> 16;\n      filler.colors[filler.pos + i + 1] = c >> 8 & 255;\n      filler.colors[filler.pos + i + 2] = c & 255;\n    }\n    this.setHintStickers(\n      filler,\n      faceletMeshStickeringMask !== \"invisible\" && !this.isDup\n    );\n  }\n  addUVs(filler) {\n    const uvs = filler.uvs;\n    const vert = filler.vertices;\n    const coords = new Array(3);\n    for (let i = 3 * this.stickerStart; i < 3 * this.stickerEnd; i++) {\n      coords[0] = vert[3 * i];\n      coords[1] = vert[3 * i + 1];\n      coords[2] = vert[3 * i + 2];\n      const uv = filler.tm.getuv(this.faceNum, coords);\n      uvs[2 * i] = uv[0];\n      uvs[2 * i + 1] = uv[1];\n    }\n    for (let i = 3 * this.hintStart; i < 3 * this.hintEnd; i++) {\n      coords[0] = vert[3 * i];\n      coords[1] = vert[3 * i + 1];\n      coords[2] = vert[3 * i + 2];\n      const uv = filler.tm.getuv(this.faceNum, coords);\n      uvs[2 * i] = uv[0];\n      uvs[2 * i + 1] = uv[1];\n    }\n  }\n  setTexture(filler, sd) {\n    if (this.texturePtr === sd) {\n      return 0;\n    }\n    this.texturePtr = sd;\n    const sz = 6 * filler.sz;\n    filler.uvs.copyWithin(\n      6 * this.stickerStart,\n      6 * sd.stickerStart + sz,\n      6 * sd.stickerEnd + sz\n    );\n    filler.uvs.copyWithin(\n      6 * this.hintStart,\n      6 * sd.hintStart + sz,\n      6 * sd.hintEnd + sz\n    );\n    return 1;\n  }\n  setColor(filler, sd) {\n    const c = sd.origColorStickeringMask;\n    if (this.faceColor !== c) {\n      this.faceColor = c;\n      const sz = filler.pos;\n      filler.colors.copyWithin(\n        9 * this.stickerStart,\n        9 * sd.stickerStart + sz,\n        9 * sd.stickerEnd + sz\n      );\n      filler.colors.copyWithin(\n        9 * this.hintStart,\n        9 * sd.hintStart + sz,\n        9 * sd.hintEnd + sz\n      );\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n};\nvar HitPlaneDef = class {\n  constructor(hitface, tm, stickerDat) {\n    __publicField(this, \"cubie\");\n    __publicField(this, \"geo\");\n    this.cubie = new Group();\n    const coords = hitface.coords;\n    const filler = new Filler(coords.length / 3 - 2, tm);\n    for (let g = 1; 3 * g + 3 < coords.length; g++) {\n      filler.addUncolored(coords, 0);\n      filler.addUncolored(coords, g);\n      filler.addUncolored(coords, g + 1);\n    }\n    this.geo = new BufferGeometry();\n    filler.setAttributes(this.geo);\n    const obj = new Mesh(this.geo, invisMaterial);\n    obj.userData.quantumMove = stickerDat.notationMapper.notationToExternal(\n      new Move(hitface.name)\n    );\n    this.cubie.scale.setScalar(0.99);\n    this.cubie.add(obj);\n  }\n};\nvar AxisInfo2 = class {\n  constructor(axisDat) {\n    __publicField(this, \"axis\");\n    __publicField(this, \"order\");\n    const vec = axisDat.coordinates;\n    this.axis = new Vector3(vec[0], vec[1], vec[2]);\n    this.order = axisDat.order;\n  }\n};\nvar DEFAULT_COLOR_FRACTION = 0.71;\nvar PG_SCALE = 0.5;\nvar _pendingStickeringUpdate, _isValidMove, isValidMove_fn, _a2;\nvar PG3D = (_a2 = class extends Object3D {\n  constructor(scheduleRenderCallback, kpuzzle, stickerDat, enableFoundationOpt = false, enableHintStickersOpt = false, hintStickerHeightScale = 1, faceletScale = 1, params = {}) {\n    super();\n    __privateAdd(this, _isValidMove);\n    __publicField(this, \"stickers\");\n    __publicField(this, \"axesInfo\");\n    __publicField(this, \"stickerTargets\", []);\n    __publicField(this, \"controlTargets\", []);\n    __publicField(this, \"movingObj\");\n    __publicField(this, \"filler\");\n    __publicField(this, \"foundationBound\");\n    // before this: colored; after: black\n    __publicField(this, \"fixedGeo\");\n    __publicField(this, \"lastPos\");\n    __publicField(this, \"lastMoveTransformation\");\n    __publicField(this, \"hintMaterial\");\n    __publicField(this, \"stickerMaterial\");\n    __publicField(this, \"materialArray1\");\n    __publicField(this, \"materialArray2\");\n    __publicField(this, \"textured\", false);\n    __publicField(this, \"showHintStickers\", false);\n    __publicField(this, \"showFoundations\", false);\n    __publicField(this, \"hintMaterialDisposable\");\n    __publicField(this, \"stickerMaterialDisposable\");\n    __privateAdd(this, _pendingStickeringUpdate, false);\n    __publicField(this, \"isPG3DForTwisty3DPuzzleWrapper\");\n    this.scheduleRenderCallback = scheduleRenderCallback;\n    this.kpuzzle = kpuzzle;\n    this.stickerDat = stickerDat;\n    this.faceletScale = faceletScale;\n    this.params = params;\n    if (stickerDat.stickers.length === 0) {\n      throw Error(\"Reuse of stickerdat from pg; please don't do that.\");\n    }\n    this.hintMaterial = new MeshBasicMaterial({\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.5\n    });\n    this.hintMaterialDisposable = true;\n    this.stickerMaterial = basicStickerMaterial;\n    this.stickerMaterialDisposable = false;\n    this.axesInfo = {};\n    const axesDef = this.stickerDat.axis;\n    for (const axis of axesDef) {\n      this.axesInfo[axis.quantumMove.family] = new AxisInfo2(axis);\n    }\n    const stickers = this.stickerDat.stickers;\n    this.stickers = {};\n    this.materialArray1 = new Array(8);\n    this.materialArray2 = new Array(8);\n    this.showFoundation(enableFoundationOpt);\n    enableFoundationOpt = true;\n    let triangleCount = 0;\n    const multiplier = 3;\n    for (const sticker of stickers) {\n      const sides = sticker.coords.length / 3;\n      triangleCount += multiplier * (sides - 2);\n    }\n    const filler = new Filler(triangleCount, stickerDat.textureMapper);\n    const black = 0;\n    const normals = [];\n    let totArea = 0;\n    for (const f of stickerDat.faces) {\n      normals.push(normal(f.coords));\n      totArea += polyarea(f.coords);\n    }\n    const colorfrac = faceletScale !== \"auto\" ? faceletScale * faceletScale : DEFAULT_COLOR_FRACTION;\n    let nonDupStickers = 0;\n    for (const sticker of stickers) {\n      if (!sticker.isDup) {\n        nonDupStickers++;\n      }\n    }\n    const trim = Math.sqrt(totArea / nonDupStickers) * (1 - Math.sqrt(colorfrac)) / 2;\n    for (const sticker of stickers) {\n      const orbit = sticker.orbit;\n      const ord = sticker.ord;\n      const ori = sticker.ori;\n      if (!this.stickers[orbit]) {\n        this.stickers[orbit] = [];\n      }\n      if (!this.stickers[orbit][ori]) {\n        this.stickers[orbit][ori] = [];\n      }\n      const options = {};\n      if (params.stickeringMask) {\n        options.stickeringMask = getFaceletStickeringMask(\n          params.stickeringMask,\n          orbit,\n          ord,\n          ori,\n          false\n        );\n      }\n      const stickerdef = new StickerDef(filler, sticker, trim, options);\n      this.stickers[orbit][ori][ord] = stickerdef;\n    }\n    this.showHintStickers = enableHintStickersOpt;\n    enableHintStickersOpt = true;\n    for (const sticker of stickers) {\n      const orbit = sticker.orbit;\n      const ord = sticker.ord;\n      const ori = sticker.ori;\n      this.stickers[orbit][ori][ord].addHint(\n        filler,\n        sticker,\n        enableHintStickersOpt,\n        hintStickerHeightScale,\n        trim,\n        normals[sticker.face]\n      );\n    }\n    this.foundationBound = filler.ipos;\n    for (const sticker of stickers) {\n      const orbit = sticker.orbit;\n      const ord = sticker.ord;\n      const ori = sticker.ori;\n      if (enableFoundationOpt) {\n        this.stickers[orbit][ori][ord].addFoundation(filler, sticker, black);\n      }\n    }\n    const fixedGeo = new BufferGeometry();\n    filler.setAttributes(fixedGeo);\n    filler.makeGroups(fixedGeo);\n    const obj = new Mesh(fixedGeo, this.materialArray1);\n    obj.scale.set(PG_SCALE, PG_SCALE, PG_SCALE);\n    this.add(obj);\n    const obj2 = new Mesh(fixedGeo, this.materialArray2);\n    obj2.scale.set(PG_SCALE, PG_SCALE, PG_SCALE);\n    this.add(obj2);\n    const hitfaces = this.stickerDat.faces;\n    this.movingObj = obj2;\n    this.fixedGeo = fixedGeo;\n    this.filler = filler;\n    for (const hitface of hitfaces) {\n      const facedef = new HitPlaneDef(\n        hitface,\n        stickerDat.textureMapper,\n        this.stickerDat\n      );\n      facedef.cubie.scale.set(PG_SCALE, PG_SCALE, PG_SCALE);\n      this.add(facedef.cubie);\n      this.controlTargets.push(facedef.cubie.children[0]);\n    }\n    filler.saveOriginalColors();\n    stickerDat.stickers = [];\n    this.updateMaterialArrays();\n  }\n  dispose() {\n    if (this.fixedGeo) {\n      this.fixedGeo.dispose();\n    }\n    if (this.stickerMaterialDisposable) {\n      this.stickerMaterial.dispose();\n      this.stickerMaterial = basicStickerMaterial;\n      this.stickerMaterialDisposable = false;\n    }\n    if (this.hintMaterialDisposable) {\n      this.hintMaterial.dispose();\n      this.hintMaterial = basicStickerMaterial;\n      this.hintMaterialDisposable = false;\n    }\n  }\n  experimentalGetStickerTargets() {\n    return this.stickerTargets;\n  }\n  experimentalGetControlTargets() {\n    return this.controlTargets;\n  }\n  getClosestMoveToAxis(point, transformations) {\n    let closestMove = null;\n    let closestMoveDotProduct = 0;\n    let modify = (m) => m;\n    switch (transformations.depth) {\n      case \"secondSlice\": {\n        modify = (m) => m.modified({ innerLayer: 2 });\n        break;\n      }\n      case \"rotation\": {\n        modify = (m) => m.modified({ family: `${m.family}v` });\n        break;\n      }\n    }\n    for (const axis of this.stickerDat.axis) {\n      const product = point.dot(new Vector3(...axis.coordinates));\n      if (product > closestMoveDotProduct) {\n        const modified = this.stickerDat.notationMapper.notationToExternal(\n          modify(axis.quantumMove)\n        );\n        if (!modified) {\n          continue;\n        }\n        if (__privateMethod(this, _isValidMove, isValidMove_fn).call(this, modified)) {\n          closestMoveDotProduct = product;\n          closestMove = modified;\n        }\n      }\n    }\n    if (!closestMove) {\n      return null;\n    }\n    if (transformations.invert) {\n      closestMove = closestMove.invert();\n    }\n    const order = this.kpuzzle.moveToTransformation(closestMove).repetitionOrder();\n    return { move: closestMove, order };\n  }\n  setStickeringMask(stickeringMask) {\n    this.params.stickeringMask = stickeringMask;\n    if (stickeringMask.specialBehaviour !== \"picture\") {\n      for (const orbitDefinition of this.kpuzzle.definition.orbits) {\n        const { numPieces, numOrientations } = orbitDefinition;\n        for (let pieceIdx = 0; pieceIdx < numPieces; pieceIdx++) {\n          for (let faceletIdx = 0; faceletIdx < numOrientations; faceletIdx++) {\n            const faceletStickeringMask = getFaceletStickeringMask(\n              stickeringMask,\n              orbitDefinition.orbitName,\n              pieceIdx,\n              faceletIdx,\n              false\n            );\n            const stickerDef = this.stickers[orbitDefinition.orbitName][faceletIdx][pieceIdx];\n            if (this.textured && this.hintMaterialDisposable && faceletStickeringMask === \"invisible\") {\n            } else {\n              stickerDef.setStickeringMask(this.filler, faceletStickeringMask);\n            }\n          }\n        }\n      }\n    }\n    __privateSet(this, _pendingStickeringUpdate, true);\n    if (this.lastPos) {\n      this.onPositionChange(this.lastPos);\n    }\n  }\n  onPositionChange(p) {\n    const transformation = p.pattern.experimentalToTransformation();\n    if (!transformation) {\n      throw new Error(\"indistinguishable pieces are not supported by PG3D yet\");\n    }\n    const noRotation = new Euler();\n    this.movingObj.rotation.copy(noRotation);\n    let colormods = 0;\n    const filler = this.filler;\n    const ind = filler.ind;\n    if (!this.lastPos || __privateGet(this, _pendingStickeringUpdate) || !this.lastPos.pattern.experimentalToTransformation().isIdentical(transformation)) {\n      for (const orbit in this.stickers) {\n        const pieces = this.stickers[orbit];\n        const pos2 = transformation.transformationData[orbit];\n        const orin = pieces.length;\n        if (orin === 1) {\n          const pieces2 = pieces[0];\n          for (let i = 0; i < pieces2.length; i++) {\n            const ni = pos2.permutation[i];\n            if (this.textured) {\n              colormods += pieces2[i].setTexture(filler, pieces2[ni]);\n            } else {\n              colormods += pieces2[i].setColor(filler, pieces2[ni]);\n            }\n          }\n        } else {\n          for (let ori = 0; ori < orin; ori++) {\n            const pieces2 = pieces[ori];\n            for (let i = 0; i < pieces2.length; i++) {\n              const nori = (ori + orin - pos2.orientationDelta[i]) % orin;\n              const ni = pos2.permutation[i];\n              if (this.textured) {\n                colormods += pieces2[i].setTexture(filler, pieces[nori][ni]);\n              } else {\n                colormods += pieces2[i].setColor(filler, pieces[nori][ni]);\n              }\n            }\n          }\n        }\n      }\n      this.lastPos = p;\n    }\n    let vismods = 0;\n    for (const moveProgress of p.movesInProgress) {\n      const externalMove = moveProgress.move;\n      const unswizzled = this.stickerDat.unswizzle(externalMove);\n      if (!unswizzled) {\n        return;\n      }\n      const move = externalMove;\n      let quantumTransformation;\n      try {\n        quantumTransformation = this.kpuzzle.moveToTransformation(\n          move.modified({ amount: 1 })\n        );\n      } catch (e) {\n        const move1 = this.stickerDat.notationMapper.notationToInternal(move);\n        if (move1) {\n          const move2 = this.stickerDat.notationMapper.notationToExternal(\n            move1.modified({ amount: 1 })\n          );\n          if (move2) {\n            quantumTransformation = this.kpuzzle.moveToTransformation(move2);\n          }\n        }\n        if (!quantumTransformation) {\n          console.log(e);\n          throw e;\n        }\n      }\n      const ax = this.axesInfo[unswizzled.family];\n      const turnNormal = ax.axis;\n      const angle = -this.ease(moveProgress.fraction) * moveProgress.direction * unswizzled.amount * TAU / ax.order;\n      this.movingObj.rotateOnAxis(turnNormal, angle);\n      if (this.lastMoveTransformation !== quantumTransformation) {\n        for (const orbit in this.stickers) {\n          const pieces = this.stickers[orbit];\n          const orin = pieces.length;\n          const bmv = quantumTransformation.transformationData[orbit];\n          for (let ori = 0; ori < orin; ori++) {\n            const pieces2 = pieces[ori];\n            for (let i = 0; i < pieces2.length; i++) {\n              const p2 = pieces2[i];\n              const ni = bmv.permutation[i];\n              let tv = 0;\n              if (ni !== i || bmv.orientationDelta[i] !== 0) {\n                tv = 1;\n              }\n              if (tv !== p2.twistVal) {\n                if (tv) {\n                  for (let j = p2.stickerStart; j < p2.stickerEnd; j++) {\n                    ind[j] |= 1;\n                  }\n                  for (let j = p2.hintStart; j < p2.hintEnd; j++) {\n                    ind[j] |= 1;\n                  }\n                  for (let j = p2.foundationStart; j < p2.foundationEnd; j++) {\n                    ind[j] |= 1;\n                  }\n                } else {\n                  for (let j = p2.stickerStart; j < p2.stickerEnd; j++) {\n                    ind[j] &= ~1;\n                  }\n                  for (let j = p2.hintStart; j < p2.hintEnd; j++) {\n                    ind[j] &= ~1;\n                  }\n                  for (let j = p2.foundationStart; j < p2.foundationEnd; j++) {\n                    ind[j] &= ~1;\n                  }\n                }\n                p2.twistVal = tv;\n                vismods++;\n              }\n            }\n          }\n        }\n        this.lastMoveTransformation = quantumTransformation;\n      }\n    }\n    if (__privateGet(this, _pendingStickeringUpdate) || vismods) {\n      this.filler.makeGroups(this.fixedGeo);\n    }\n    if (__privateGet(this, _pendingStickeringUpdate) || colormods) {\n      if (this.textured) {\n        this.fixedGeo.getAttribute(\"uv\").addUpdateRange(\n          0,\n          6 * this.foundationBound\n        );\n        this.fixedGeo.getAttribute(\"uv\").needsUpdate = true;\n      }\n      if (__privateGet(this, _pendingStickeringUpdate) || !this.textured) {\n        this.fixedGeo.getAttribute(\"color\").addUpdateRange(\n          0,\n          9 * this.foundationBound\n        );\n        this.fixedGeo.getAttribute(\"color\").needsUpdate = true;\n      }\n    }\n    this.scheduleRenderCallback();\n    __privateSet(this, _pendingStickeringUpdate, false);\n  }\n  ease(fraction) {\n    return smootherStep(fraction);\n  }\n  showHintFacelets(v) {\n    this.showHintStickers = v;\n  }\n  updateMaterialArrays() {\n    for (let i = 0; i < 8; i++) {\n      this.materialArray1[i] = invisMaterial;\n      this.materialArray2[i] = invisMaterial;\n    }\n    this.materialArray1[0] = this.stickerMaterial;\n    this.materialArray2[1] = this.stickerMaterial;\n    if (this.showHintStickers) {\n      this.materialArray1[2] = this.hintMaterial;\n      this.materialArray2[3] = this.hintMaterial;\n    } else {\n      this.materialArray1[2] = invisMaterial;\n      this.materialArray2[3] = invisMaterial;\n    }\n    if (this.showFoundations) {\n      this.materialArray1[6] = foundationMaterial;\n      this.materialArray2[7] = foundationMaterial;\n    } else {\n      this.materialArray1[6] = invisMaterial;\n      this.materialArray2[7] = invisMaterial;\n    }\n  }\n  showFoundation(v) {\n    this.showFoundations = v;\n  }\n  setHintStickerOpacity(v) {\n    if (this.hintMaterialDisposable) {\n      this.hintMaterial.dispose();\n      this.hintMaterialDisposable = false;\n    }\n    if (v === 0) {\n      this.hintMaterial = invisMaterial;\n    } else if (v === 1) {\n      this.hintMaterial = this.stickerMaterial;\n    } else {\n      this.hintMaterial = new MeshBasicMaterial({\n        vertexColors: true,\n        transparent: true,\n        opacity: v\n      });\n      this.hintMaterialDisposable = true;\n    }\n  }\n  experimentalUpdateOptions(options) {\n    if (options.hintFacelets !== void 0) {\n      this.showHintFacelets(options.hintFacelets !== \"none\");\n    }\n    if (options.showFoundation !== void 0) {\n      this.showFoundation(options.showFoundation);\n    }\n    if (options.hintStickerOpacity !== void 0) {\n      this.setHintStickerOpacity(options.hintStickerOpacity);\n    }\n    __privateSet(this, _pendingStickeringUpdate, true);\n    if (this.lastPos) {\n      this.onPositionChange(this.lastPos);\n    }\n    if (typeof options.faceletScale !== \"undefined\" && options.faceletScale !== this.faceletScale) {\n      console.warn(\n        \"Dynamic facelet scale is not yet supported for PG3D. For now, re-create the TwistyPlayer to change the facelet scale.\"\n      );\n    }\n    this.updateMaterialArrays();\n    this.scheduleRenderCallback();\n  }\n  adduvs() {\n    const filler = this.filler;\n    if (filler.uvs) {\n      return;\n    }\n    this.filler.uvs = new Float32Array(12 * filler.sz);\n    for (const orbit in this.stickers) {\n      const pieces = this.stickers[orbit];\n      const orin = pieces.length;\n      for (let ori = 0; ori < orin; ori++) {\n        const pieces2 = pieces[ori];\n        for (const piece2 of pieces2) {\n          piece2.addUVs(this.filler);\n        }\n      }\n    }\n    filler.uvs.copyWithin(6 * filler.sz, 0, 6 * filler.sz);\n    const sa1 = filler.uvs.subarray(0, 6 * filler.sz);\n    this.fixedGeo.setAttribute(\"uv\", new BufferAttribute(sa1, 2, true));\n  }\n  experimentalUpdateTexture(enabled, stickerTexture, hintTexture) {\n    if (!stickerTexture) {\n      enabled = false;\n    }\n    if (enabled && !this.filler.uvs) {\n      this.adduvs();\n    }\n    this.textured = enabled;\n    if (this.stickerMaterialDisposable) {\n      this.stickerMaterial.dispose();\n      this.stickerMaterialDisposable = false;\n    }\n    if (enabled) {\n      this.stickerMaterial = new MeshBasicMaterial({\n        map: stickerTexture,\n        side: FrontSide,\n        transparent: false\n      });\n      this.stickerMaterialDisposable = true;\n    } else {\n      this.stickerMaterial = basicStickerMaterial;\n    }\n    if (this.hintMaterialDisposable) {\n      this.hintMaterial.dispose();\n      this.hintMaterialDisposable = false;\n    }\n    if (enabled) {\n      this.hintMaterial = new MeshBasicMaterial({\n        map: hintTexture,\n        side: FrontSide,\n        transparent: true\n      });\n      this.hintMaterialDisposable = true;\n    } else {\n      this.hintMaterial = basicStickerMaterial;\n    }\n    if (enabled) {\n      this.showHintFacelets(hintTexture !== null);\n    }\n    this.updateMaterialArrays();\n    __privateSet(this, _pendingStickeringUpdate, true);\n    if (this.lastPos) {\n      this.onPositionChange(this.lastPos);\n    }\n    this.scheduleRenderCallback();\n  }\n}, _pendingStickeringUpdate = new WeakMap(), _isValidMove = new WeakSet(), isValidMove_fn = function(move) {\n  try {\n    this.kpuzzle.moveToTransformation(move);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}, _a2);\nvar Twisty3DScene = class {\n  constructor() {\n    __publicField(this, \"renderTargets\", /* @__PURE__ */ new Set());\n    __publicField(this, \"twisty3Ds\", /* @__PURE__ */ new Set());\n    __publicField(this, \"threeJSScene\", (async () => new (await THREEJS).Scene())());\n  }\n  addRenderTarget(renderTarget) {\n    this.renderTargets.add(renderTarget);\n  }\n  scheduleRender() {\n    for (const renderTarget of this.renderTargets) {\n      renderTarget.scheduleRender();\n    }\n  }\n  async addTwisty3DPuzzle(twisty3DPuzzle) {\n    this.twisty3Ds.add(twisty3DPuzzle);\n    (await this.threeJSScene).add(twisty3DPuzzle);\n  }\n  async removeTwisty3DPuzzle(twisty3DPuzzle) {\n    this.twisty3Ds.delete(twisty3DPuzzle);\n    (await this.threeJSScene).remove(twisty3DPuzzle);\n  }\n  async clearPuzzles() {\n    for (const puz of this.twisty3Ds) {\n      (await this.threeJSScene).remove(puz);\n    }\n    this.twisty3Ds.clear();\n  }\n};\nasync function cube3DShim(renderCallback, options) {\n  return new Cube3D(await cube3x3x3.kpuzzle(), renderCallback, options);\n}\nasync function pg3dShim(renderCallback, puzzleLoader, hintFacelets, faceletScale, darkIgnoredOrbits) {\n  return new PG3D(\n    renderCallback,\n    await puzzleLoader.kpuzzle(),\n    (await puzzleLoader.pg()).get3d({ darkIgnoredOrbits }),\n    true,\n    hintFacelets === \"floating\",\n    void 0,\n    faceletScale\n  );\n}\nexport {\n  Cube3D,\n  PG3D,\n  three_module_exports as T3I,\n  Twisty3DScene,\n  cube3DShim,\n  pg3dShim\n};\n"],"names":["smootherStep","x","svgLoader","TextureLoader","ignoredMaterial","MeshBasicMaterial","color","Color","convertLinearToSRGB","ignoredMaterialHint","side","BackSide","transparent","opacity","invisibleMaterial","visible","orientedMaterial","orientedMaterialHint","experimentalOriented2Material","experimentalOriented2MaterialHint","mysteryMaterial","mysterMaterialHint","AxisInfo","constructor","vector","fromZ","dimColor","hintOpacityScale","options","__publicField","this","colorLinearSRGB","dimColorLinearSRGB","stickerMaterial","regular","FrontSide","dim","oriented","experimentalOriented2","ignored","invisible","mystery","hintStickerMaterial","hintColor","hintDimColor","axesInfo","Vector3","Euler","TAU","face","U","L","F","R","B","D","familyToAxis","u","Uw","Uv","y","l","Lw","Lv","M","f","Fw","Fv","S","z","r","Rw","Rv","b","Bw","Bv","d","Dw","Dv","E","cubieDimensions","cube3DOptionsDefaults","showMainStickers","hintFacelets","showFoundation","experimentalStickeringMask","foundationSprite","hintSprite","initialHintFaceletsAnimation","faceletScale","getFaceletScale","blackMesh","blackTranslucentMesh","CubieDef","orbit","stickerFaceNames","q","individualStickerFaceNames","split","stickerFaces","map","s","matrix","Matrix4","setPosition","firstPiecePosition","premultiply","makeRotationFromQuaternion","t","v","t4","Quaternion","setFromAxisAngle","O","EDGES","CORNERS","CENTERS","orientationRotation","i","makeRotationAxis","clone","normalize","cubieStickerOrder","pieceDefs","CUBE_SCALE","pictureStickerCoords","sharedCubieFoundationGeometryCache","newStickerGeometry","r2","BufferGeometry","half","setAttribute","BufferAttribute","Float32Array","_sharedHintStickerGeometryCache","_sharedHintStickerGeometry","sharedHintStickerGeometry_fn","_animateRaiseHintFacelets","animateRaiseHintFacelets_fn","_a","sharedStickerGeometryCache","Cube3D","Object3D","kpuzzle","scheduleRenderCallback","arguments","length","undefined","super","__privateAdd","Promise","resolve","setSpriteURL","url","load","setHintSpriteURL","Object","assign","name","Error","setSprite","setHintSprite","kpuzzleFaceletInfo","orbitFaceletInfo","pieces","createCubie","bind","scale","set","setStickeringMask","__privateMethod","call","experimentalSetFaceletScale","texture","sprite","experimentalSetStickerSpriteURL","stickerSpriteURL","experimentalSetHintStickerSpriteURL","hintStickerSpriteURL","stickeringMask","specialBehaviour","orbitName","orbitStickeringMask","entries","orbits","pieceIdx","pieceStickeringMask","pieceInfo","faceletIdx","faceletStickeringMask","facelets","faceletInfo","stickeringMask2","mask","facelet","material","faceIdx","hintStickeringMask","hintMask","hintFacelet","pieceInfos","values","faceletInfos","experimentalUpdateOptions","foundation","experimentalFoundationMeshes","hintFaceletStyles","hintSticker","experimentalHintStickerMeshes","onPositionChange","p","reid333","pattern","j","patternData","copy","multiply","orientation","moveProgress","movesInProgress","move","turnNormal","family","moveMatrix","ease","fraction","direction","amount","quantumTransformation","moveToTransformation","modified","transformationData","permutation","orientationDelta","orbitFacelets","piece","orbitPieceIdx","cubieFaceletInfo","push","cubie","Group","createCubieFoundation","add","sticker","createSticker","rotate","offsetX","offsetY","addImageSticker","async","hint","mesh","DoubleSide","x1","x2","y1","y2","v1","Vector2","v2","v3","v4","geometry","matrixAutoUpdate","box","BoxGeometry","Mesh","posAxisInfo","materialAxisInfo","isHint","geo","stickerMesh","setRotationFromEuler","position","multiplyScalar","setScalar","experimentalSetFoundationOpacity","orbitInfo","WeakMap","WeakSet","__privateGet","__privateSet","haveStartedSharingRenderers","translationRange","translate","setTimeout","hintStartTime","performance","now","lastTranslation","animateRaiseHintSticker","elapsed","newTranslation","requestAnimationFrame","foundationMaterial","invisMaterial","basicStickerMaterial","vertexColors","dist","coords","a","Math","hypot","triarea","c","ab","bc","ac","sqrt","polyarea","sum","normal","Array","cross","m","_pendingStickeringUpdate","_isValidMove","isValidMove_fn","_a2","Filler","sz","tm","vertices","uvs","colors","Uint8Array","ind","pos","ipos","pt","addUncolored","setind","makePoly","ncoords","g","setAttributes","sa2","subarray","makeGroups","clearGroups","si","iv","addGroup","saveOriginalColors","copyWithin","StickerDef","filler","stickerDat","trim","isDup","faceNum","stickerStart","sdColor","getHex","origColor","origColorStickeringMask","faceColor","stickerCoords","stickerEnd","face2","tr","A","iter","pi","ni","k","alen","blen","good","t2","trimEdges","slice","hintCoords","hintStickerHeightScale","normal2","hCoords","foundationCoords","addHint","hintStickers","hintStart","hintEnd","addFoundation","black","foundationStart","foundationEnd","setHintStickers","indv","faceletMeshStickeringMask","addUVs","vert","uv","getuv","setTexture","sd","texturePtr","setColor","HitPlaneDef","hitface","obj","userData","quantumMove","notationMapper","notationToExternal","Move","AxisInfo2","axisDat","vec","coordinates","axis","order","PG_SCALE","PG3D","enableFoundationOpt","enableHintStickersOpt","params","stickers","hintMaterial","hintMaterialDisposable","stickerMaterialDisposable","axesDef","materialArray1","materialArray2","triangleCount","textureMapper","normals","totArea","faces","colorfrac","nonDupStickers","ord","ori","getFaceletStickeringMask","stickerdef","showHintStickers","foundationBound","fixedGeo","obj2","hitfaces","movingObj","facedef","controlTargets","children","updateMaterialArrays","dispose","experimentalGetStickerTargets","stickerTargets","experimentalGetControlTargets","getClosestMoveToAxis","point","transformations","closestMove","closestMoveDotProduct","modify","depth","innerLayer","product","dot","invert","repetitionOrder","orbitDefinition","definition","numPieces","numOrientations","stickerDef","textured","lastPos","transformation","experimentalToTransformation","noRotation","rotation","colormods","isIdentical","pos2","orin","pieces2","nori","vismods","externalMove","unswizzled","unswizzle","e","move1","notationToInternal","move2","console","log","ax","angle","rotateOnAxis","lastMoveTransformation","bmv","p2","tv","twistVal","getAttribute","addUpdateRange","needsUpdate","showHintFacelets","showFoundations","setHintStickerOpacity","hintStickerOpacity","warn","adduvs","piece2","sa1","experimentalUpdateTexture","enabled","stickerTexture","hintTexture","_","Twisty3DScene","Set","THREEJS","Scene","addRenderTarget","renderTarget","renderTargets","scheduleRender","addTwisty3DPuzzle","twisty3DPuzzle","twisty3Ds","threeJSScene","removeTwisty3DPuzzle","delete","remove","clearPuzzles","puz","clear","cube3DShim","renderCallback","cube3x3x3","pg3dShim","puzzleLoader","darkIgnoredOrbits","pg","get3d"],"sourceRoot":""}